services:
  nocodb:
    image: nocodb/nocodb:latest
    container_name: nocodb
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Database and Cache
      - NC_DB=pg://nocodb-db:5432?u=${POSTGRES_USER}&p=${POSTGRES_PASSWORD}&d=${POSTGRES_DB}
      - NC_REDIS_URL=redis://:${REDIS_PASSWORD}@nocodb-redis:6379
      # Base URLs
      - NC_PUBLIC_URL=https://${NOCODB_DOMAIN}
      - NC_AUTH_JWT_SECRET=${NC_AUTH_JWT_SECRET}
      - NODE_ENV=production
    volumes:
      - nocodb_data:/usr/app/data
    depends_on:
      nocodb-db:
        condition: service_healthy
      nocodb-redis:
        condition: service_healthy
    networks:
      - app-network
      - nocodb-internal
    security_opt:
      - no-new-privileges:true
    labels:
      # Enable Traefik
      - "traefik.enable=true"

      # HTTPS configuration
      - "traefik.http.routers.nocodb.rule=Host(`${NOCODB_DOMAIN}`)"
      - "traefik.http.routers.nocodb.entrypoints=websecure"
      - "traefik.http.routers.nocodb.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nocodb.service=nocodb"

      # Service configuration
      - "traefik.http.services.nocodb.loadbalancer.server.port=8080"

      # Security headers middleware
      - "traefik.http.middlewares.nocodb-headers.headers.sslredirect=true"
      - "traefik.http.middlewares.nocodb-headers.headers.stsSeconds=315360000"
      - "traefik.http.middlewares.nocodb-headers.headers.browserxssfilter=true"
      - "traefik.http.middlewares.nocodb-headers.headers.contenttypenosniff=true"
      - "traefik.http.middlewares.nocodb-headers.headers.forcestsheader=true"
      - "traefik.http.middlewares.nocodb-headers.headers.sslhost=${NOCODB_DOMAIN}"
      - "traefik.http.middlewares.nocodb-headers.headers.stsincludesubdomains=true"
      - "traefik.http.middlewares.nocodb-headers.headers.stspreload=true"
      - "traefik.http.middlewares.nocodb-headers.headers.referrerpolicy=strict-origin-when-cross-origin"

      # Apply middleware to HTTPS router
      - "traefik.http.routers.nocodb.middlewares=nocodb-headers"

      # Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nocodb-db:
    image: postgres:16-alpine
    container_name: nocodb-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - nocodb_db_data:/var/lib/postgresql/data
    networks:
      - nocodb-internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=false"

  nocodb-redis:
    image: redis:7-alpine
    container_name: nocodb-redis
    restart: unless-stopped
    networks:
      - nocodb-internal
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=false"

networks:
  app-network:
    external: true
  nocodb-internal:
    driver: bridge
    internal: true

volumes:
  nocodb_data:
    driver: local
  nocodb_db_data:
    driver: local
  nocodb_redis_data:
    driver: local 