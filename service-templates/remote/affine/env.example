# Affine Environment Configuration
# Copy this file to .env and customize for your installation

# ==============================================
# DOMAIN CONFIGURATION
# ==============================================

# The domain where Affine will be accessible
# Example: affine.yourdomain.com
AFFINE_DOMAIN=affine.example.com

# Affine version/revision to deploy
# Options: stable, canary, or specific version tag
AFFINE_REVISION=stable

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# PostgreSQL database configuration
# These credentials will be used for both the database and application
POSTGRES_DB=affine
POSTGRES_USER=affine_user
POSTGRES_PASSWORD=your_secure_database_password

# Optional: PostgreSQL initialization arguments
# Default: --data-checksums --encoding=UTF-8 --lc-collate=C --lc-ctype=C
POSTGRES_INITDB_ARGS=--data-checksums --encoding=UTF-8 --lc-collate=C --lc-ctype=C

# ==============================================
# REDIS CONFIGURATION
# ==============================================

# Redis password for authentication
# Generate a secure password for Redis access
REDIS_PASSWORD=your_secure_redis_password

# ==============================================
# AFFINE APPLICATION CONFIGURATION
# ==============================================

# Application secret for encryption and security (REQUIRED)
# Generate a random 32+ character string
# You can use: openssl rand -hex 32
AFFINE_SECRET=your_very_long_random_secret_key_here_at_least_32_chars

# JWT secret for token authentication (REQUIRED)
# Generate a different random 32+ character string
# You can use: openssl rand -hex 32
AFFINE_JWT_SECRET=your_jwt_secret_key_here_at_least_32_chars

# ==============================================
# FEATURE CONFIGURATION
# ==============================================

# Enable/disable Affine indexer for search functionality
# IMPORTANT: Keep this disabled unless you have Manticoresearch configured
# true = enable search indexing (requires Manticoresearch), false = disable (saves resources)
AFFINE_INDEXER_ENABLED=false

# Enable/disable telemetry data collection
# true = send usage data to Affine team, false = disable telemetry
AFFINE_TELEMETRY_ENABLED=false

# ==============================================
# EMAIL CONFIGURATION (OPTIONAL)
# ==============================================

# SMTP server configuration for email notifications
# Leave empty to disable email functionality
AFFINE_MAILER_HOST=smtp.gmail.com
AFFINE_MAILER_PORT=587
AFFINE_MAILER_USER=your-email@gmail.com
AFFINE_MAILER_PASS=your_app_password
AFFINE_MAILER_SENDER=your-email@gmail.com

# ==============================================
# STORAGE CONFIGURATION (LEGACY)
# ==============================================

# These variables are maintained for backward compatibility
# They are now managed by Docker volumes but can be used for custom mounts

# Custom upload location (optional - uses Docker volume by default)
# UPLOAD_LOCATION=./affine-storage

# Custom config location (optional - uses Docker volume by default)
# CONFIG_LOCATION=./affine-config

# Custom database data location (optional - uses Docker volume by default)
# DB_DATA_LOCATION=./postgres-data

# Legacy database configuration (for backward compatibility)
# DB_USERNAME=${POSTGRES_USER}
# DB_PASSWORD=${POSTGRES_PASSWORD}
# DB_DATABASE=${POSTGRES_DB}

# ==============================================
# NETWORKING CONFIGURATION
# ==============================================

# Port configuration (only needed if running without Traefik)
# Default: 3010 (mapped internally, Traefik handles external access)
# PORT=3010

# ==============================================
# ADVANCED CONFIGURATION (OPTIONAL)
# ==============================================

# Custom worker configuration
# AFFINE_WORKER_COUNT=4

# Session configuration
# AFFINE_SESSION_SECRET=${AFFINE_SECRET}

# File upload limits (in MB)
# AFFINE_MAX_FILE_SIZE=100

# Workspace limits
# AFFINE_MAX_WORKSPACE_SIZE=1000

# Rate limiting configuration
# AFFINE_RATE_LIMIT_ENABLED=true
# AFFINE_RATE_LIMIT_TTL=60
# AFFINE_RATE_LIMIT_LIMIT=120

# ==============================================
# EXAMPLE VALUES FOR DIFFERENT SETUPS
# ==============================================

# For a personal knowledge base:
# AFFINE_DOMAIN=notes.yourdomain.com
# AFFINE_INDEXER_ENABLED=true
# AFFINE_TELEMETRY_ENABLED=false
# AFFINE_MAILER_HOST=  # Disable email

# For a team/organization setup:
# AFFINE_DOMAIN=workspace.company.com
# AFFINE_INDEXER_ENABLED=true
# AFFINE_TELEMETRY_ENABLED=false
# AFFINE_MAILER_HOST=smtp.company.com

# For development/testing:
# AFFINE_DOMAIN=affine.localhost
# AFFINE_INDEXER_ENABLED=true
# AFFINE_TELEMETRY_ENABLED=true

# ==============================================
# SECURITY NOTES
# ==============================================

# 1. ALWAYS use strong, unique secrets for AFFINE_SECRET and AFFINE_JWT_SECRET
# 2. Use a secure database password
# 3. Use a secure Redis password
# 4. Keep secrets different between environments
# 5. Regularly backup your database and storage
# 6. Monitor resource usage and adjust limits accordingly
# 7. Consider disabling telemetry for privacy

# ==============================================
# PERFORMANCE TUNING
# ==============================================

# For better performance on larger instances:
# - Enable AFFINE_INDEXER_ENABLED for search functionality
# - Increase database memory limits in docker-compose.yml
# - Consider using external PostgreSQL and Redis instances
# - Monitor and adjust worker count based on usage

# ==============================================
# BACKUP RECOMMENDATIONS
# ==============================================

# Important data to backup:
# 1. PostgreSQL database (contains all user data)
# 2. Affine storage volume (contains uploaded files)
# 3. Affine config volume (contains application settings)
# 4. Environment configuration (.env file)

# Backup commands:
# docker exec affine_postgres pg_dump -U ${POSTGRES_USER} ${POSTGRES_DB} > backup.sql
# docker cp affine_server:/root/.affine/storage ./storage-backup
# docker cp affine_server:/root/.affine/config ./config-backup

# ==============================================
# TROUBLESHOOTING
# ==============================================

# Common Issues and Solutions:

# 1. Redis Authentication Errors:
#    - Ensure REDIS_PASSWORD is set and matches in all services
#    - Redis container must be healthy before other services start

# 2. Manticoresearch Connection Errors:
#    - Keep AFFINE_INDEXER_ENABLED=false unless you configure Manticoresearch
#    - Affine tries to connect to Manticoresearch on port 9308 for search indexing
#    - Basic functionality works without search indexing

# 3. Migration Failures:
#    - Ensure PostgreSQL is fully initialized before migration runs
#    - Check database credentials match between services
#    - Redis must be accessible during migration

# 4. Container Health Check Failures:
#    - Wait for proper startup times (start_period values)
#    - Check that all dependencies are healthy before dependent services start

# ==============================================
# FIRST-TIME SETUP
# ==============================================

# After deployment:
# 1. Visit https://your-domain.com
# 2. Complete the initial setup wizard
# 3. Create your first workspace
# 4. Configure team settings if applicable
# 5. Set up regular backups
# 6. Monitor resource usage and performance
