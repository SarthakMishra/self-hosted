---
# Docker Services Role - Main Tasks
# Deploys essential production services: Traefik reverse proxy

- name: Create Docker Swarm stack directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - "{{ docker_stack_root }}"
    - "{{ docker_stack_root }}/compose"
    - "{{ docker_stack_root }}/data"
    - "{{ docker_stack_root }}/data/traefik/config"
    - "{{ docker_stack_root }}/data/traefik/certs"
  tags: [docker_services, phase1]

- name: Create Docker Swarm environment file
  ansible.builtin.template:
    src: docker-swarm.env.j2
    dest: "{{ docker_stack_root }}/.env"
    owner: root
    group: root
    mode: '0600'
  tags: [docker_services, phase1]

- name: Create Traefik dynamic configuration
  ansible.builtin.template:
    src: dynamic.yml.j2
    dest: "{{ docker_stack_root }}/data/traefik/config/dynamic.yml"
    owner: root
    group: root
    mode: '0644'
  tags: [docker_services, traefik]

- name: Download Cloudflare origin CA certificate
  ansible.builtin.get_url:
    url: https://developers.cloudflare.com/ssl/static/authenticated_origin_pull_ca.pem
    dest: "{{ docker_stack_root }}/data/traefik/config/cloudflare-origin-ca.pem"
    owner: root
    group: root
    mode: '0600'
  tags: [docker_services, traefik]

- name: Create Traefik compose file
  ansible.builtin.template:
    src: traefik.yml.j2
    dest: "{{ docker_stack_root }}/compose/traefik.yml"
    owner: root
    group: root
    mode: '0644'
  tags: [docker_services, traefik]



- name: Ensure Traefik data volumes exist
  community.docker.docker_volume:
    name: "{{ item }}"
    state: present
  loop:
    - traefik_certs
    - traefik_logs
    - traefik_config
  tags: [docker_services, traefik]



- name: Deploy Traefik stack
  community.docker.docker_stack:
    name: traefik
    compose:
      - "{{ docker_stack_root }}/compose/traefik.yml"
    state: present
  tags: [docker_services, traefik, deploy]

- name: Wait for Traefik to be ready
  ansible.builtin.wait_for:
    port: 443
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 60
  tags: [docker_services, traefik, deploy]



- name: Display service information
  ansible.builtin.debug:
    msg:
      - "üöÄ Docker Services Deployed Successfully!"
      - ""
      - "üîÄ Traefik (Reverse Proxy):"
      - "  Dashboard: http://{{ tailscale_ip | default(ansible_default_ipv4.address) }}:8080"
      - "  HTTPS Endpoint: {{ 'https://' + domain_name if domain_name is defined else 'Configure domain in service labels' }}"
      - ""
      - "üìä Glances (System Monitoring):"
      - "  Web Interface: http://{{ tailscale_ip | default(ansible_default_ipv4.address) }}:61208"
      - ""
      - "üõ°Ô∏è Security:"
      - "  - Traefik: Cloudflare integration with authenticated origin pulls"
      - "  - Glances: Host-based monitoring (not containerized)"
      - ""
      - "üöÄ Service Management:"
      - "  - Use Docker CLI for service deployment and management"
      - "  - See service-deployment-guide.md for deployment procedures"
      - "  - Access: Admin services via Tailscale network only"
  tags: [docker_services, deploy] 