# Traefik Production Reverse Proxy with Cloudflare and CrowdSec
# Copy this file to .env and customize for your production installation

# ==============================================
# CLOUDFLARE CONFIGURATION
# ==============================================

# Cloudflare email address (associated with your account)
CLOUDFLARE_EMAIL=your-cloudflare-email@example.com

# Cloudflare Global API Key (REQUIRED)
# Get this from: https://dash.cloudflare.com/profile/api-tokens
# Click "Global API Key" and copy the key
CLOUDFLARE_API_KEY=your_cloudflare_global_api_key_here

# ==============================================
# LET'S ENCRYPT CONFIGURATION
# ==============================================

# Email address for Let's Encrypt certificate notifications
# REQUIRED: Let's Encrypt will send renewal notifications here
LETSENCRYPT_EMAIL=your-email@example.com

# ==============================================
# CROWDSEC CONFIGURATION
# ==============================================

# CrowdSec API key for Traefik plugin integration
# Generate this key after CrowdSec starts:
# 1. Start CrowdSec: docker-compose up -d crowdsec
# 2. Generate API key: docker exec crowdsec cscli bouncers add traefik-bouncer
# 3. List bouncers: docker exec crowdsec cscli bouncers list
# 4. Copy the API key from the output and paste it here
CROWDSEC_API_KEY=your_crowdsec_api_key_here_32_chars_minimum

# ==============================================
# CROWDSEC CONFIGURATION
# ==============================================

# CrowdSec uses its internal SQLite database (no external database required)

# ==============================================
# TRAEFIK CONFIGURATION
# ==============================================

# Traefik log level
# Options: DEBUG, INFO, WARN, ERROR, FATAL, PANIC
TRAEFIK_LOG_LEVEL=INFO

# ==============================================
# SECURITY NOTES
# ==============================================

# 1. NEVER commit your actual .env file to version control
# 2. Use strong, unique passwords for all database credentials
# 3. Protect your Cloudflare API key - it has full access to your domain
# 4. Regularly rotate CrowdSec API keys
# 5. Monitor Let's Encrypt rate limits (50 certs/week per domain)
# 6. Ensure your domain's DNS is managed by Cloudflare
# 7. Set up proper firewall rules for ports 80/443
# 8. Consider using Cloudflare API tokens instead of Global API Key for better security

# ==============================================
# DNS SETUP REQUIREMENTS
# ==============================================

# Before starting Traefik, ensure your DNS is configured:
#
# 1. Point your domain to your server's public IP:
#    yourdomain.com -> YOUR_SERVER_PUBLIC_IP
#    *.yourdomain.com -> YOUR_SERVER_PUBLIC_IP
#
# 2. Ensure Cloudflare proxy is enabled for your domain
# 3. Set SSL/TLS encryption mode to "Full (strict)" in Cloudflare
# 4. Verify your domain is active in Cloudflare

# ==============================================
# FIRST-TIME SETUP CHECKLIST
# ==============================================

# 1. Configure DNS records in Cloudflare (A and CNAME for wildcard)
# 2. Get Cloudflare Global API Key from dashboard
# 3. Generate CrowdSec API key: openssl rand -hex 32
# 4. After deployment, register the bouncer:
#    docker exec crowdsec cscli bouncers add traefik-bouncer
#    docker exec crowdsec cscli bouncers list
#    # Copy the API key from the output and update CROWDSEC_API_KEY in .env
# 5. Copy this file to .env and fill in your values
# 6. Create external network: docker network create app-network
# 7. Start Traefik: docker-compose up -d
# 8. Check logs: docker-compose logs -f traefik
# 9. Verify certificates are issued correctly
# 10. Test CrowdSec integration

# ==============================================
# SERVICE INTEGRATION
# ==============================================

# For other services in your production environment, use these labels:
#
# labels:
#   - "traefik.enable=true"
#   - "traefik.http.routers.servicename.rule=Host(`service.yourdomain.com`)"
#   - "traefik.http.routers.servicename.entrypoints=websecure"
#   - "traefik.http.routers.servicename.tls.certresolver=letsencrypt"
#   - "traefik.http.services.servicename.loadbalancer.server.port=PORT"
#   - "traefik.http.routers.servicename.middlewares=security-headers,crowdsec"

# ==============================================
# CROWDSEC INTEGRATION
# ==============================================

# CrowdSec will automatically:
# - Monitor your server logs for security threats
# - Block malicious IPs at the Traefik level
# - Share threat intelligence with the community
# - Provide real-time protection against attacks

# To view CrowdSec status:
# docker exec crowdsec cscli metrics

# To view blocked IPs:
# docker exec crowdsec cscli decisions list

# ==============================================
# MONITORING AND MAINTENANCE
# ==============================================

# Regular maintenance tasks:
# 1. Monitor Traefik logs for certificate issues
# 2. Check CrowdSec metrics and decisions
# 3. Review blocked IPs and whitelist legitimate ones if needed
# 4. Monitor CrowdSec performance and disk usage
# 5. Update Traefik and CrowdSec regularly
# 6. Backup certificates and configuration

# ==============================================
# TROUBLESHOOTING
# ==============================================

# Common issues:
# - Certificate failures: Check Cloudflare API key and domain ownership
# - CrowdSec not working: Verify API key and connectivity
# - DNS issues: Ensure Cloudflare proxy is enabled
# - Rate limit errors: Check Let's Encrypt limits

# Check certificate status:
# docker exec traefik cat /letsencrypt/acme.json | jq .

# View Traefik logs:
# docker-compose logs -f traefik

# View CrowdSec logs:
# docker-compose logs -f crowdsec

# Test CrowdSec API:
# curl -H "X-Api-Key: your_api_key" http://localhost:8080/v1/decisions

# Register bouncer (if not done automatically):
# docker exec crowdsec cscli bouncers add traefik-bouncer
# docker exec crowdsec cscli bouncers list

# ==============================================
# EXAMPLE VALUES
# ==============================================

# For production deployment:
# CLOUDFLARE_EMAIL=admin@company.com
# CLOUDFLARE_API_KEY=1234567890abcdef1234567890abcdef
# LETSENCRYPT_EMAIL=admin@company.com
# CROWDSEC_API_KEY=a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456

# TRAEFIK_LOG_LEVEL=INFO 