# Traefik Reverse Proxy with Let's Encrypt Environment Configuration
# Copy this file to .env and customize for your home installation

# ==============================================
# DOMAIN CONFIGURATION
# ==============================================

# Primary domain for your home services
# Example: local.example.com (supports wildcard *.local.example.com)
HOME_DOMAIN=local.example.com

# Traefik dashboard domain
# Example: traefik.local.example.com
TRAEFIK_DASHBOARD_DOMAIN=traefik.local.example.com

# ==============================================
# NETWORK CONFIGURATION
# ==============================================

# Local IP address where Traefik will be accessible
# This should be your TrueNAS/server IP address
TRAEFIK_LOCAL_IP=192.168.xx.xx

# ==============================================
# LET'S ENCRYPT CONFIGURATION
# ==============================================

# Email address for Let's Encrypt certificate notifications
# REQUIRED: Let's Encrypt will send renewal notifications here
LETSENCRYPT_EMAIL=your-email@example.com

# ==============================================
# CLOUDFLARE DNS CONFIGURATION
# ==============================================

# Cloudflare credentials for DNS-01 challenge (required for wildcard certs)
# Option 1: Global API Key (easier setup)
CLOUDFLARE_EMAIL=your-cloudflare-email@example.com
CLOUDFLARE_API_KEY=your_cloudflare_global_api_key

# Option 2: DNS API Token (more secure - comment out above and use this)
# Create token at: https://dash.cloudflare.com/profile/api-tokens
# Required permissions: Zone:Read, DNS:Edit for your domain
# CLOUDFLARE_DNS_API_TOKEN=your_cloudflare_dns_api_token

# ==============================================
# TRAEFIK DASHBOARD CONFIGURATION
# ==============================================

# Dashboard authentication (optional but recommended)
# Generate with: htpasswd -n username
# Example: admin:$$2y$$10$$... (escape $ with $$ for docker-compose)
# For testing, you can use: admin:admin (plain text - change in production!)
TRAEFIK_DASHBOARD_AUTH=admin:admin

# Dashboard debug mode (true/false)
TRAEFIK_DEBUG=false

# Allow insecure dashboard access (true for HTTP, false for HTTPS only)
TRAEFIK_API_INSECURE=false

# ==============================================
# LOGGING CONFIGURATION
# ==============================================

# Traefik log level
# Options: DEBUG, INFO, WARN, ERROR, FATAL, PANIC
TRAEFIK_LOG_LEVEL=INFO

# ==============================================
# ADVANCED CONFIGURATION (OPTIONAL)
# ==============================================

# DNS servers for Let's Encrypt DNS challenge validation
# Default uses Cloudflare (1.1.1.1) and Google (8.8.8.8)
# DNS_RESOLVERS=1.1.1.1:53,8.8.8.8:53

# Let's Encrypt staging server (for testing)
# Uncomment to use staging environment (higher rate limits, untrusted certs)
# LETSENCRYPT_STAGING=true

# Certificate storage directory (inside container)
# Default: /letsencrypt (don't change unless you know what you're doing)
# CERT_STORAGE_PATH=/letsencrypt

# ==============================================
# SERVICE LABEL EXAMPLES
# ==============================================

# For other services in your home network, use these labels:
#
# labels:
#   - "traefik.enable=true"
#   - "traefik.http.routers.servicename.rule=Host(`service.local.example.com`)"
#   - "traefik.http.routers.servicename.entrypoints=websecure"
#   - "traefik.http.routers.servicename.tls.certresolver=letsencrypt"
#   - "traefik.http.services.servicename.loadbalancer.server.port=PORT"
#   - "traefik.http.routers.servicename.middlewares=security-headers"

# ==============================================
# DNS SETUP REQUIREMENTS
# ==============================================

# Before starting Traefik, ensure your DNS is configured:
#
# 1. Point your domain to your public IP:
#    local.example.com -> YOUR_PUBLIC_IP
#    *.local.example.com -> YOUR_PUBLIC_IP
#
# 2. Port forwarding on your router/firewall:
#    Port 80 (HTTP) -> 192.168.xx.xx:80
#    Port 443 (HTTPS) -> 192.168.xx.xx:443
#
# 3. Cloudflare zone must be active and accessible via API

# ==============================================
# EXAMPLE VALUES FOR DIFFERENT SETUPS
# ==============================================

# For personal home lab:
# HOME_DOMAIN=home.mydomain.com
# TRAEFIK_DASHBOARD_DOMAIN=traefik.home.mydomain.com
# TRAEFIK_LOCAL_IP=192.168.1.100
# TRAEFIK_DEBUG=false

# For development/testing:
# HOME_DOMAIN=dev.mydomain.com
# TRAEFIK_DASHBOARD_DOMAIN=traefik.dev.mydomain.com
# TRAEFIK_DEBUG=true
# LETSENCRYPT_STAGING=true

# ==============================================
# SECURITY NOTES
# ==============================================

# 1. NEVER commit your actual .env file to version control
# 2. Use strong passwords for dashboard authentication
# 3. Protect your Cloudflare API credentials
# 4. Consider using API tokens instead of Global API Keys
# 5. Monitor Let's Encrypt rate limits (50 certs/week per domain)
# 6. Use staging environment for testing to avoid rate limits
# 7. Ensure your domain's DNS is managed by Cloudflare
# 8. Set up proper firewall rules for ports 80/443

# ==============================================
# FIRST-TIME SETUP CHECKLIST
# ==============================================

# 1. Configure DNS records (A and CNAME for wildcard)
# 2. Set up port forwarding on your router (80, 443)
# 3. Get Cloudflare API credentials
# 4. Copy this file to .env and fill in your values
# 5. Generate dashboard password: htpasswd -n admin (escape $ with $$ in .env file)
# 6. Test with staging environment first
# 7. Start Traefik: docker-compose up -d
# 8. Check logs: docker-compose logs -f traefik
# 9. Access dashboard: https://traefik.local.example.com
# 10. Deploy your first service with Traefik labels

# ==============================================
# TROUBLESHOOTING
# ==============================================

# Common issues:
# - DNS not propagated: Wait 24-48 hours after DNS changes
# - Cloudflare API errors: Check credentials and permissions
# - Certificate failures: Check domain ownership and DNS setup
# - Rate limit errors: Use staging environment for testing
# - Connection refused: Check port forwarding and firewall rules

# Check certificate status:
# docker exec traefik cat /letsencrypt/acme.json | jq .

# View real-time logs:
# docker-compose logs -f traefik 