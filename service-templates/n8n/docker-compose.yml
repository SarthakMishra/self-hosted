services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    
    # Environment configuration
    env_file:
      - .env
    
    environment:
      # Core n8n configuration
      - N8N_HOST=${N8N_DOMAIN}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${N8N_DOMAIN}/
      
      # Timezone configuration
      - GENERIC_TIMEZONE=${N8N_TIMEZONE:-UTC}
      
      # Database configuration (SQLite default, can be changed to PostgreSQL)
      - DB_TYPE=${N8N_DB_TYPE:-sqlite}
      - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
      
      # PostgreSQL configuration (uncomment if using PostgreSQL)
      # - DB_POSTGRESDB_HOST=${N8N_DB_HOST}
      # - DB_POSTGRESDB_PORT=${N8N_DB_PORT:-5432}
      # - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME}
      # - DB_POSTGRESDB_USER=${N8N_DB_USER}
      # - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      
      # Security configuration
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-false}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      
      # Email configuration (optional)
      - N8N_EMAIL_MODE=${N8N_EMAIL_MODE:-smtp}
      - N8N_SMTP_HOST=${N8N_SMTP_HOST}
      - N8N_SMTP_PORT=${N8N_SMTP_PORT:-587}
      - N8N_SMTP_USER=${N8N_SMTP_USER}
      - N8N_SMTP_PASS=${N8N_SMTP_PASS}
      - N8N_SMTP_SENDER=${N8N_SMTP_SENDER}
      
      # Execution configuration
      - EXECUTIONS_PROCESS=${N8N_EXECUTIONS_PROCESS:-main}
      - EXECUTIONS_TIMEOUT=${N8N_EXECUTIONS_TIMEOUT:-3600}
      - EXECUTIONS_TIMEOUT_MAX=${N8N_EXECUTIONS_TIMEOUT_MAX:-7200}
      
      # File system access
      - N8N_DEFAULT_LOCALE=${N8N_DEFAULT_LOCALE:-en}
      - N8N_PERSONALIZATION_ENABLED=${N8N_PERSONALIZATION_ENABLED:-true}
      
    volumes:
      # Persistent data storage
      - n8n_data:/home/node/.n8n
      
      # Local files directory for file operations
      - ./local-files:/files:rw
      
      # Optional: Custom nodes (uncomment if needed)
      # - ./custom-nodes:/home/node/.n8n/custom
      
      # Optional: SSL certificates (if using custom certs)
      # - ./certs:/home/node/certs:ro

    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # HTTP to HTTPS redirect
      - "traefik.http.routers.n8n-http.rule=Host(`${N8N_DOMAIN}`)"
      - "traefik.http.routers.n8n-http.entrypoints=web"
      - "traefik.http.routers.n8n-http.middlewares=redirect-to-https"
      
      # HTTPS configuration
      - "traefik.http.routers.n8n-https.rule=Host(`${N8N_DOMAIN}`)"
      - "traefik.http.routers.n8n-https.entrypoints=websecure"
      - "traefik.http.routers.n8n-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.n8n-https.service=n8n"
      
      # Service configuration
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      
      # Security headers middleware
      - "traefik.http.middlewares.n8n-headers.headers.sslredirect=true"
      - "traefik.http.middlewares.n8n-headers.headers.stsSeconds=315360000"
      - "traefik.http.middlewares.n8n-headers.headers.browserxssfilter=true"
      - "traefik.http.middlewares.n8n-headers.headers.contenttypenosniff=true"
      - "traefik.http.middlewares.n8n-headers.headers.forcestsheader=true"
      - "traefik.http.middlewares.n8n-headers.headers.sslhost=${N8N_DOMAIN}"
      - "traefik.http.middlewares.n8n-headers.headers.stsincludesubdomains=true"
      - "traefik.http.middlewares.n8n-headers.headers.stspreload=true"
      - "traefik.http.middlewares.n8n-headers.headers.framedeny=true"
      
      # Apply middleware to HTTPS router
      - "traefik.http.routers.n8n-https.middlewares=n8n-headers"

    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

    # Network configuration
    networks:
      - app-network

    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Run as non-root user for security
    user: "1000:1000"

# External network created by Traefik
networks:
  app-network:
    external: true

# Persistent volumes
volumes:
  n8n_data:
    driver: local 