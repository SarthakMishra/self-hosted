---
# Stage 2: Services Playbook
# CrowdSec security, Docker installation, Traefik reverse proxy and monitoring services setup
# Run with: ansible-playbook -i inventory/stage2-production.yml playbooks/services.yml

- name: Deploy CrowdSec, Docker, Traefik and Monitoring Services
  hosts: production_servers
  become: true
  gather_facts: true
  
  vars_files:
    - ../group_vars/vault.yml
    - ../group_vars/all.yml
    - ../group_vars/crowdsec.yml
    - ../group_vars/docker.yml
    - ../group_vars/traefik.yml
    - ../group_vars/netdata.yml
    
  pre_tasks:
    - name: Display services setup banner
      ansible.builtin.debug:
        msg:
          - "=================================================="
          - "üöÄ STAGE 2: SECURITY & SERVICES DEPLOYMENT"
          - "=================================================="
          - ""
          - "Target: {{ inventory_hostname }} ({{ ansible_default_ipv4.address }})"
          - "User: {{ ansible_user }} (via Tailscale or public IP)"
          - ""
          - "This will deploy:"
          - "1. CrowdSec security engine"
          - "2. Docker installation and configuration"
          - "3. Traefik reverse proxy with automatic SSL"
          - "4. Netdata monitoring system"
          - ""
          - "üéØ Result: Production-ready server with security and containerized services"
          - ""
      tags: always

  tasks:
    # Phase 1: CrowdSec Security
    - name: Display CrowdSec setup phase
      ansible.builtin.debug:
        msg:
          - "================================================================"
          - "üõ°Ô∏è PHASE 1: CROWDSEC SECURITY ENGINE"
          - "================================================================"
      tags:
        - crowdsec_setup

    - name: Run CrowdSec security engine setup
      ansible.builtin.include_role:
        name: crowdsec
      tags:
        - crowdsec_setup

    - name: Display CrowdSec setup completion
      ansible.builtin.debug:
        msg:
          - "‚úÖ CrowdSec security engine completed"
          - "   Collections: sudo cscli collections list"
          - "   Status: sudo cscli metrics"
          - ""
      tags:
        - crowdsec_setup

    # Phase 2: Docker Setup
    - name: Display Docker setup phase
      ansible.builtin.debug:
        msg:
          - "================================================================"
          - "üê≥ PHASE 2: DOCKER INSTALLATION"
          - "================================================================"
      tags:
        - docker_setup

    - name: Run Docker installation roles
      ansible.builtin.include_role:
        name: "{{ item }}"
      loop:
        - docker_installation
        - docker_configuration
        - docker_production
        - docker_validation
      tags:
        - docker_setup

    - name: Display Docker setup completion
      ansible.builtin.debug:
        msg:
          - "‚úÖ Docker installation completed"
          - "   Management: /usr/local/bin/docker-status"
          - "   Directory: {{ docker_stack_root }}"
          - ""
      tags:
        - docker_setup

    # Phase 3: Traefik Setup
    - name: Display Traefik setup phase
      ansible.builtin.debug:
        msg:
          - "================================================================"
          - "üåê PHASE 3: TRAEFIK REVERSE PROXY SETUP"
          - "================================================================"
      tags:
        - traefik_setup

    - name: Run Traefik reverse proxy setup
      ansible.builtin.include_role:
        name: traefik
      tags:
        - traefik_setup

    - name: Display Traefik setup completion
      ansible.builtin.debug:
        msg:
          - "‚úÖ Traefik reverse proxy setup completed"
          - "   HTTP/HTTPS endpoints: Port 80/443 configured"
          - "   Automatic SSL: Let's Encrypt HTTP challenge"
          - ""
      tags:
        - traefik_setup

    # Phase 4: Monitoring Setup
    - name: Display monitoring setup phase
      ansible.builtin.debug:
        msg:
          - "================================================================"
          - "üìä PHASE 4: MONITORING SETUP"
          - "================================================================"
      tags:
        - monitoring_setup

    - name: Run monitoring system setup
      ansible.builtin.include_role:
        name: netdata
      tags:
        - monitoring_setup
        - netdata_setup

    - name: Display monitoring setup completion
      ansible.builtin.debug:
        msg:
          - "‚úÖ Monitoring setup completed"
          - "   Netdata: http://{{ vault_production_host }}:{{ netdata_port }}"
          - ""
      tags:
        - monitoring_setup

  post_tasks:
    - name: Complete deployment finished
      ansible.builtin.debug:
        msg:
          - "================================================================"
          - "üéâ COMPLETE REMOTE SERVER DEPLOYMENT FINISHED!"
          - "================================================================"
          - ""
          - "‚úÖ ALL STAGES COMPLETED SUCCESSFULLY:"
          - ""
          - "üîß Stage 1: System Setup"  
          - "   ‚úÖ System hardening applied"
          - "   ‚úÖ Tailscale VPN configured"
          - "   ‚úÖ UFW firewall configured"
          - ""
          - "üöÄ Stage 2: Services"
          - "   ‚úÖ CrowdSec security engine installed"
          - "   ‚úÖ Docker installed and configured"
          - "   ‚úÖ Traefik reverse proxy configured"
          - "   ‚úÖ Netdata monitoring installed"
          - ""
          - "================================================================"
          - "üîó ACCESS YOUR SERVER:"
          - "================================================================"
          - ""
          - "üîí SSH Access:"
          - "   ssh {{ vault_production_user }}@{{ vault_production_host }} (Tailscale/Public)"
          - ""
          - "üåê Web Services:"
          - "   Traefik: HTTP/HTTPS reverse proxy ready"
          - "   Add services with Traefik labels for automatic SSL"
          - ""
          - "üìä Monitoring:"
          - "   Netdata: http://{{ vault_production_host }}:{{ netdata_port }}"
          - ""
          - "================================================================"
          - "üîß MANAGEMENT COMMANDS:"
          - "================================================================"
          - ""
          - "üê≥ Docker:"
          - "   Status: /usr/local/bin/docker-status"
          - "   Cleanup: /usr/local/bin/docker-cleanup"
          - "   Directory: {{ docker_stack_root }}"
          - ""
          - "üõ°Ô∏è Security:"
          - "   CrowdSec Status: sudo cscli collections list"
          - "   Security Alerts: sudo cscli alerts list"
          - "   Blocked IPs: sudo cscli decisions list"
          - "   Bouncer Status: sudo cscli bouncers list"
          - ""
          - "üåê Reverse Proxy:"
          - "   Traefik Config: {{ traefik_root_dir }}"
          - "   SSL Certificates: Automatic via Let's Encrypt"
          - ""
          - "================================================================"
          - "üöÄ YOUR REMOTE SERVER IS READY!"
          - ""
          - "Deploy any web service with Traefik labels for automatic"
          - "SSL certificates and public access via your domain!"
          - ""
      tags: always 