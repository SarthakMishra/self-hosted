---
# Stage 1: Bootstrap Playbook
# Initial server setup, SSH hardening, and admin user creation
# Run with: ansible-playbook -i inventory/stage1-bootstrap.yml playbooks/bootstrap.yml

- name: Bootstrap Fresh Ubuntu Server
  hosts: bootstrap_servers
  become: true
  gather_facts: true
  
  vars_files:
    - ../group_vars/vault.yml
    - ../group_vars/all.yml
    
  pre_tasks:
    - name: Display bootstrap banner
      ansible.builtin.debug:
        msg:
          - "=================================================="
          - "üîê STAGE 1: BOOTSTRAP FRESH UBUNTU SERVER"
          - "=================================================="
          - ""
          - "Target: {{ inventory_hostname }} ({{ ansible_default_ipv4.address }})"
          - "User: {{ ansible_user }} (password authentication)"
          - ""
          - "This will:"
          - "1. Create admin user: {{ vault_production_user }}"
          - "2. Install SSH keys for admin user"
          - "3. Enable passwordless sudo"
          - "4. Disable SSH password authentication"
          - "5. Restart SSH service"
          - ""
          - "‚ö†Ô∏è  After this stage, use stage2-hardened.yml inventory"
          - ""
      tags: always

    - name: Check system requirements
      ansible.builtin.assert:
        that:
          - ansible_distribution == "Ubuntu"
          - ansible_distribution_major_version | int >= 20
          - ansible_memtotal_mb >= 1024
        fail_msg: "Requirements: Ubuntu 20.04+, 1GB RAM"
        success_msg: "System requirements met"
      tags: always

  tasks:
    - name: Enable passwordless sudo for bootstrap user
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/bootstrap-user
        line: "{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL"
        create: true
        mode: '0440'
        validate: 'visudo -cf %s'
      tags:
        - sudo_setup

    - name: Create admin user for final access
      ansible.builtin.user:
        name: "{{ vault_production_user }}"
        shell: /bin/bash
        home: "/home/{{ vault_production_user }}"
        create_home: true
        groups: sudo
        append: true
        state: present
      tags:
        - admin_user

    - name: Configure passwordless sudo for admin user
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/admin-user
        line: "{{ vault_production_user }} ALL=(ALL) NOPASSWD:ALL"
        create: true
        mode: '0440'
        validate: 'visudo -cf %s'
      tags:
        - admin_user

    - name: Create admin user .ssh directory
      ansible.builtin.file:
        path: "/home/{{ vault_production_user }}/.ssh"
        state: directory
        owner: "{{ vault_production_user }}"
        group: "{{ vault_production_user }}"
        mode: '0700'
      tags:
        - ssh_keys

    - name: Install SSH public key for admin user
      ansible.builtin.authorized_key:
        user: "{{ vault_production_user }}"
        key: "{{ vault_admin_ssh_public_key }}"
        state: present
      when: vault_admin_ssh_public_key is defined
      tags:
        - ssh_keys

    - name: Install SSH public key for bootstrap user (for stage2 access)
      ansible.builtin.authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ vault_admin_ssh_public_key }}"
        state: present
      when: vault_admin_ssh_public_key is defined
      tags:
        - ssh_keys

    - name: Disable SSH password authentication
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      loop:
        - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
        - { regexp: '^#?ChallengeResponseAuthentication', line: 'ChallengeResponseAuthentication no' }
        - { regexp: '^#?PubkeyAuthentication', line: 'PubkeyAuthentication yes' }
      register: ssh_config_updated
      tags:
        - ssh_hardening

    - name: Restart SSH service to apply security settings
      ansible.builtin.systemd:
        name: ssh
        state: restarted
      when: ssh_config_updated is changed
      tags:
        - ssh_hardening

  post_tasks:
    - name: Bootstrap completed successfully
      ansible.builtin.debug:
        msg:
          - "================================================================"
          - "‚úÖ BOOTSTRAP STAGE COMPLETED SUCCESSFULLY"
          - "================================================================"
          - ""
          - "‚úÖ Admin user created: {{ vault_production_user }}"
          - "‚úÖ SSH keys installed for both users"
          - "‚úÖ Passwordless sudo enabled"
          - "‚úÖ SSH password authentication disabled"
          - "‚úÖ SSH service restarted"
          - ""
          - "üîÑ NEXT STEPS:"
          - "1. Test SSH connection with keys:"
          - "   ssh {{ vault_production_user }}@{{ ansible_default_ipv4.address }}"
          - "   ssh {{ ansible_user }}@{{ ansible_default_ipv4.address }}"
          - ""
          - "2. Continue with system setup:"
          - "   ansible-playbook -i inventory/stage2-hardened.yml playbooks/system-setup.yml"
          - ""
          - "‚ö†Ô∏è  Password authentication is now DISABLED"
          - "‚ö†Ô∏è  Use SSH keys for all future connections"
          - ""
      tags: always 