---
services:

  frigate:
    container_name: frigate
    restart: unless-stopped
    stop_grace_period: 30s
    image: ghcr.io/blakeblackshear/frigate:stable-tensorrt
    # Environment configuration
    env_file:
      - .env
    
    environment:
      - YOLO_MODELS=yolov7-320.trt
      - USE_FP16=true
      - TZ=UTC
      # Camera credentials for config file substitution
      - CAMERA_USER_1=${CAMERA_USER_1}
      - CAMERA_PASS_1=${CAMERA_PASS_1}
      - CAMERA_IP_1=${CAMERA_IP_1}
      - CAMERA_USER_2=${CAMERA_USER_2}
      - CAMERA_PASS_2=${CAMERA_PASS_2}
      - CAMERA_IP_2=${CAMERA_IP_2}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu
    volumes:
      - /opt/docker/config/frigate-config:/config
      - /opt/docker/data/media/cctv:/media/frigate
      - ./frigate_config.yaml:/config/config.yaml:ro
    ports:
      - "5000:5000"        # Keep for RTMP streams and API access
      - "8554:8554"  # Keep for RTSP restreaming
    
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # Web interface routing - HTTP
      - "traefik.http.routers.frigate-http.rule=Host(`${FRIGATE_DOMAIN}`)"
      - "traefik.http.routers.frigate-http.entrypoints=web"
      - "traefik.http.routers.frigate-http.service=frigate"
      
      # Web interface routing - HTTPS  
      - "traefik.http.routers.frigate-https.rule=Host(`${FRIGATE_DOMAIN}`)"
      - "traefik.http.routers.frigate-https.entrypoints=websecure"
      - "traefik.http.routers.frigate-https.tls=true"
      - "traefik.http.routers.frigate-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.frigate-https.service=frigate"
      
      # Service configuration (Frigate web interface on port 5000)
      - "traefik.http.services.frigate.loadbalancer.server.port=5000"
    
    networks:
      - home-network

networks:
  home-network:
    external: true
