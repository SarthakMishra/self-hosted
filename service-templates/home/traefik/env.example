# Traefik Reverse Proxy Environment Configuration
# Copy this file to .env and customize for your installation

# ==============================================
# DOMAIN CONFIGURATION
# ==============================================

# Root domain for your services (will be used for wildcard certificates)
# Example: example.com (supports *.example.com)
ROOT_DOMAIN=example.com

# ==============================================
# NETWORK CONFIGURATION
# ==============================================

# Local IP address where Traefik will be accessible
# This should be your server's IP address on the local network
TRAEFIK_LOCAL_IP=192.168.1.100

# ==============================================
# LET'S ENCRYPT CONFIGURATION
# ==============================================

# Email address for Let's Encrypt certificate notifications
# REQUIRED: Let's Encrypt will send renewal notifications here
LETSENCRYPT_EMAIL=your-email@example.com

# ==============================================
# CLOUDFLARE DNS CONFIGURATION (for DNS-01 challenge)
# ==============================================

# Cloudflare credentials for DNS-01 challenge (required for wildcard certs)
# Get from: https://dash.cloudflare.com/profile/api-tokens -> Global API Key
CLOUDFLARE_EMAIL=your-cloudflare-email@example.com
CLOUDFLARE_API_KEY=your_cloudflare_global_api_key

# ==============================================
# TRAEFIK DASHBOARD CONFIGURATION
# ==============================================

# Dashboard debug mode (true/false)
TRAEFIK_DEBUG=false

# Allow insecure dashboard access (true for HTTP, false for HTTPS only)
TRAEFIK_API_INSECURE=false

# ==============================================
# LOGGING CONFIGURATION
# ==============================================

# Traefik log level
# Options: DEBUG, INFO, WARN, ERROR, FATAL, PANIC
TRAEFIK_LOG_LEVEL=INFO

# ==============================================
# SERVICE LABEL EXAMPLES
# ==============================================

# For standard HTTPS services, use these labels:
#
# networks:
#   - home-network
# labels:
#   - "traefik.enable=true"
#   - "traefik.http.routers.servicename.rule=Host(`service.${ROOT_DOMAIN}`)"
#   - "traefik.http.routers.servicename.entrypoints=websecure"
#   - "traefik.http.routers.servicename.tls=true"
#   - "traefik.http.routers.servicename.tls.certresolver=letsencrypt"
#   - "traefik.http.services.servicename.loadbalancer.server.port=PORT"
#
# For services that need both HTTP and HTTPS (no redirect):
#
# networks:
#   - home-network
# labels:
#   - "traefik.enable=true"
#   # HTTP router
#   - "traefik.http.routers.servicename-http.rule=Host(`service.${ROOT_DOMAIN}`)"
#   - "traefik.http.routers.servicename-http.entrypoints=web"
#   # HTTPS router
#   - "traefik.http.routers.servicename-https.rule=Host(`service.${ROOT_DOMAIN}`)"
#   - "traefik.http.routers.servicename-https.entrypoints=websecure"
#   - "traefik.http.routers.servicename-https.tls=true"
#   - "traefik.http.routers.servicename-https.tls.certresolver=letsencrypt"
#   - "traefik.http.services.servicename.loadbalancer.server.port=PORT"

# ==============================================
# EXAMPLE VALUES FOR DIFFERENT SETUPS
# ==============================================

# For personal home lab:
# ROOT_DOMAIN=home.mydomain.com
# TRAEFIK_DEBUG=false
# TRAEFIK_LOCAL_IP=192.168.1.100

# For development/testing:
# ROOT_DOMAIN=dev.mydomain.com
# TRAEFIK_DEBUG=true

# ==============================================
# SECURITY NOTES
# ==============================================

# 1. NEVER commit your actual .env file to version control
# 2. Protect your Cloudflare Global API Key (keep it secure)
# 3. Monitor Let's Encrypt rate limits (50 certs/week per domain)
# 4. Ensure your domain's DNS is managed by Cloudflare
# 5. Regularly rotate API keys
# 6. Consider using DNS API tokens for enhanced security (optional upgrade)

# ==============================================
# FIRST-TIME SETUP CHECKLIST
# ==============================================

# 1. Copy this file to .env and fill in your values
# 2. Ensure home-network exists: docker network create home-network
# 3. Create Let's Encrypt volume: docker volume create traefik_letsencrypt
# 4. Start Traefik: docker-compose up -d
# 5. Check logs: docker-compose logs -f
# 6. Access dashboard: http://YOUR_LOCAL_IP:8080 or https://traefik.yourdomain.com

# ==============================================
# TROUBLESHOOTING
# ==============================================

# Common issues:
# - Certificate failures: Check domain ownership and Global API Key
# - DNS resolution: Ensure domain nameservers point to Cloudflare
# - 502/503 errors: Check target service availability and network connectivity

# Check certificate status:
# docker exec traefik cat /letsencrypt/acme.json | jq .

# View real-time logs:
# docker-compose logs -f traefik

# Test DNS resolution:
# nslookup yourdomain.com
# dig yourdomain.com TXT