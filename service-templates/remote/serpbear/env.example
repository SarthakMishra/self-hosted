# SerpBear Search Engine Scraper Environment Configuration
# Copy this file to .env and customize for your installation

# ==============================================
# DOMAIN CONFIGURATION
# ==============================================

# The domain where SerpBear will be accessible
# Example: search.yourdomain.com, serp.company.com
SERPBEAR_DOMAIN=serpbear.example.com

# ==============================================
# AUTHENTICATION CONFIGURATION
# ==============================================

# Admin username for SerpBear dashboard
# Default: admin (recommended to change)
SERPBEAR_USER=admin

# Admin password for SerpBear dashboard (REQUIRED)
# Use a strong, unique password
SERPBEAR_PASSWORD=your_secure_admin_password_here

# Secret key for session management (REQUIRED)
# Generate a strong random string (64+ characters)
# You can use: openssl rand -hex 32
SERPBEAR_SECRET=your_very_long_random_secret_key_here_at_least_64_chars

# API key for programmatic access (REQUIRED)
# Generate a strong random string (40+ characters)
# You can use: openssl rand -hex 20
SERPBEAR_APIKEY=your_secure_api_key_here_at_least_40_chars

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================

# Node environment
# Options: production, development
NODE_ENV=production

# ==============================================
# EXAMPLE CONFIGURATIONS
# ==============================================

# For personal use:
# SERPBEAR_DOMAIN=search.home.example.com
# SERPBEAR_USER=admin
# SERPBEAR_PASSWORD=your_strong_password
# SERPBEAR_SECRET=your_64_char_secret
# SERPBEAR_APIKEY=your_40_char_api_key

# For team/organization use:
# SERPBEAR_DOMAIN=serp.company.com
# SERPBEAR_USER=serpadmin
# SERPBEAR_PASSWORD=complex_team_password
# SERPBEAR_SECRET=team_secret_key_64_chars_minimum
# SERPBEAR_APIKEY=team_api_key_40_chars_minimum

# For development/testing:
# SERPBEAR_DOMAIN=serpbear.localhost
# SERPBEAR_USER=dev
# SERPBEAR_PASSWORD=dev_password
# SERPBEAR_SECRET=dev_secret_key_64_chars_minimum
# SERPBEAR_APIKEY=dev_api_key_40_chars_minimum

# ==============================================
# SECURITY NOTES
# ==============================================

# 1. ALWAYS use strong, unique passwords and keys
# 2. NEVER commit your actual .env file to version control
# 3. Regularly rotate your SECRET and APIKEY
# 4. Use HTTPS in production (handled by Traefik)
# 5. Monitor API usage and rate limits
# 6. Consider IP whitelisting for sensitive deployments
# 7. Regularly backup your data volume

# ==============================================
# FIRST-TIME SETUP
# ==============================================

# After deployment:
# 1. Visit https://your-domain.com
# 2. Login with your admin credentials
# 3. Configure search engine preferences
# 4. Test search functionality
# 5. Set up API integrations if needed
# 6. Configure rate limiting and quotas
# 7. Monitor search results and performance

# ==============================================
# API USAGE
# ==============================================

# SerpBear provides a REST API for programmatic access:
# Base URL: https://your-domain.com/api
# Authentication: X-API-KEY header with your APIKEY

# Example API calls:
# GET /api/search?q=your_search_query&engine=google
# GET /api/search?q=your_search_query&engine=bing&page=2
# GET /api/search?q=your_search_query&engine=duckduckgo&safe=1

# Supported search engines:
# - google (Google Search)
# - bing (Bing Search)
# - duckduckgo (DuckDuckGo)
# - yahoo (Yahoo Search)
# - baidu (Baidu Search)
# - yandex (Yandex Search)

# ==============================================
# RATE LIMITING AND QUOTAS
# ==============================================

# SerpBear includes built-in rate limiting to prevent abuse:
# - Default: 100 requests per hour per IP
# - Configurable through the web interface
# - API key-based rate limiting available
# - Search engine-specific limits apply

# ==============================================
# BACKUP AND MAINTENANCE
# ==============================================

# Regular maintenance tasks:
# 1. Backup the serpbear_data volume regularly
# 2. Monitor disk space usage
# 3. Check search engine availability
# 4. Review API usage and rate limits
# 5. Update SerpBear to latest version
# 6. Monitor logs for errors or abuse

# ==============================================
# TROUBLESHOOTING
# ==============================================

# Common issues:
# - Search failures: Check search engine availability
# - Rate limiting: Review usage patterns and limits
# - Authentication errors: Verify SECRET and APIKEY
# - Domain access: Check Traefik configuration and DNS

# Check logs:
# docker-compose logs -f serpbear

# Test API access:
# curl -H "X-API-KEY: your_api_key" "https://your-domain.com/api/search?q=test&engine=google"

# ==============================================
# ADVANCED CONFIGURATION
# ==============================================

# Optional: Custom search engine configurations
# These can be set through the web interface after deployment

# Proxy configuration (if needed):
# - Configure proxy settings in the web interface
# - Use rotating proxies for high-volume scraping
# - Consider residential proxies for better success rates

# Search result customization:
# - Configure result count per page
# - Set safe search preferences
# - Customize result formatting
# - Set language and region preferences

# ==============================================
# LEGAL AND COMPLIANCE
# ==============================================

# Important considerations:
# 1. Respect search engine terms of service
# 2. Implement appropriate rate limiting
# 3. Use for legitimate purposes only
# 4. Consider legal implications in your jurisdiction
# 5. Monitor for abuse and implement safeguards
# 6. Keep usage logs for compliance purposes 