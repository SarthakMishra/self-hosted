---
# Main Docker Setup Playbook
# Orchestrates complete Docker installation and configuration for Swarm deployment

- name: Docker Installation and Configuration
  hosts: all
  become: true
  gather_facts: true
  
  vars_files:
    # Include Docker configuration variables
    - ../group_vars/docker.yml
    
  pre_tasks:
    - name: Display Docker setup banner
      ansible.builtin.debug:
        msg:
          - "=================================================="
          - "üê≥ DOCKER SWARM INSTALLATION & CONFIGURATION"
          - "=================================================="
          - ""
          - "Target: {{ inventory_hostname }} ({{ ansible_default_ipv4.address }})"
          - "Node Type: {{ node_type | default('unknown') }}"
          - "Swarm Enabled: {{ docker_swarm_enabled | default(true) }}"
          - "Networks: {{ docker_networks | map(attribute='name') | join(', ') }}"
          - ""
          - "‚ö†Ô∏è  This will install Docker CE and configure production settings"
          - "üêù Docker Swarm will be initialized for cluster management"
          - "üåê Encrypted overlay networks will be created"
          - ""
      tags: always

    - name: Verify system preparation prerequisites
      ansible.builtin.assert:
        that:
          - admin_username is defined
          - tailscale_ip is defined or ansible_check_mode
        fail_msg: "System preparation must be completed first (run system-prep playbooks)"
        success_msg: "System preparation prerequisites verified"
      tags: always

    - name: Check minimum system requirements for Docker
      ansible.builtin.assert:
        that:
          - ansible_memtotal_mb >= 2048
          - ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_available') | first > 10000000000
        fail_msg: "Minimum requirements for Docker: 2GB RAM, 10GB disk space"
        success_msg: "Docker system requirements met: {{ ansible_memtotal_mb }}MB RAM, {{ (ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_available') | first / 1024 / 1024 / 1024) | round(1) }}GB disk"
      tags: always

  roles:
    - role: docker_installation
      tags: 
        - docker_installation
        - phase1
      
    - role: docker_configuration
      tags:
        - docker_configuration
        - phase1
        
    - role: docker_swarm
      tags:
        - docker_swarm
        - phase2
        
    - role: docker_networks
      tags:
        - docker_networks
        - phase2
        
    - role: docker_production
      tags:
        - docker_production
        - phase3
        
    - role: whalewall
      tags:
        - whalewall
        - phase3
      when: whalewall_enabled | default(true)
        
    - role: docker_validation
      tags:
        - docker_validation
        - phase4
        
    - role: docker_services
      tags:
        - docker_services
        - services
        - phase5
      when: deploy_docker_services | default(true)
        
    - role: restic_backup
      tags:
        - restic_backup
        - backup
        - phase6
      when: deploy_restic_backup | default(true)

  post_tasks:
    - name: Docker setup completion summary
      ansible.builtin.debug:
        msg:
          - "================================================================"
          - "üéâ DOCKER SETUP COMPLETED SUCCESSFULLY!"
          - "================================================================"
          - ""
          - "‚úÖ Docker CE installed and configured"
          - "‚úÖ Docker Swarm {{ 'initialized' if docker_swarm_enabled else 'ready' }}"
          - "‚úÖ Production networks created and encrypted"
          - "‚úÖ Log rotation and cleanup automation configured"
          - "‚úÖ UFW/Docker integration via Whalewall"
          - "‚úÖ All validations passed"
          - ""
          - "üê≥ Docker Information:"
          - "  Version: {{ docker_daemon_check.stdout | default('Unknown') }}"
          - "  Swarm Status: {{ docker_swarm_status_check.stdout | default('Unknown') }}"
          - "  Networks: {{ docker_networks | length }} configured"
          - ""
          - "üìÇ Directory Structure:"
          - "  Stack Root: {{ docker_stack_root }}"
          - "  Compose Files: {{ docker_stack_root }}/compose"
          - "  Data Volumes: {{ docker_stack_root }}/data"
          - "  Configuration: {{ docker_stack_root }}/config"
          - ""
          - "üõ†Ô∏è Management Commands:"
          - "  Status Check: /usr/local/bin/docker-status"
          - "  Manual Cleanup: /usr/local/bin/docker-cleanup"
          - "  Whalewall Logs: sudo journalctl -u whalewall -f"
          - ""
          - "üíª READY FOR SERVICE DEPLOYMENT!"
          - ""
      tags: always

  handlers:
    - name: reboot for docker
      ansible.builtin.reboot:
        reboot_timeout: "{{ reboot_timeout | default(600) }}"
        connect_timeout: 30
        test_command: "docker --version"
        msg: "Rebooting to ensure Docker configuration is fully applied"
      listen: "reboot for docker" 