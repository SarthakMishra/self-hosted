services:
  database:
    image: postgis/postgis:13-master
    volumes:
      - ./data/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_DATABASE}"
    healthcheck:
      test: ["CMD", "pg_isready", "--host=localhost", "--username=${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    networks:
      - directus-internal

  cache:
    image: redis:6
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    networks:
      - directus-internal

  directus:
    image: directus/directus:latest
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    environment:
      SECRET: "${DIRECTUS_SECRET}"

      DB_CLIENT: "pg"
      DB_HOST: "database"
      DB_PORT: "5432"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"

      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://cache:6379"

      ADMIN_EMAIL: "${ADMIN_EMAIL}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"

      PUBLIC_URL: "https://${DOMAIN}"
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=app-network"
      
      # HTTP to HTTPS redirect
      - "traefik.http.routers.directus-http.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.directus-http.entrypoints=web"
      - "traefik.http.routers.directus-http.middlewares=directus-https-redirect"
      - "traefik.http.middlewares.directus-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.directus-https-redirect.redirectscheme.permanent=true"
      
      # HTTPS router
      - "traefik.http.routers.directus.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.directus.entrypoints=websecure"
      - "traefik.http.routers.directus.tls.certresolver=letsencrypt"
      
      # Service
      - "traefik.http.services.directus.loadbalancer.server.port=8055"

      # Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - app-network
      - directus-internal

networks:
  app-network:
    external: true
  directus-internal:
    driver: bridge
