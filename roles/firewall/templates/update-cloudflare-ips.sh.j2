#!/bin/bash
# {{ ansible_managed }}
# Update UFW rules with current Cloudflare IP ranges
# Generated by Ansible firewall role

set -euo pipefail

echo "=== Updating Cloudflare IP Ranges ==="

# Configuration
CLOUDFLARE_IPV4_URL="{{ cloudflare_ipv4_url }}"
CLOUDFLARE_IPV6_URL="{{ cloudflare_ipv6_url }}"
TRAEFIK_ENABLED="{{ traefik_enabled | default(false) | lower }}"

# Only proceed if Cloudflare firewall is enabled and Traefik is enabled
if [ "${TRAEFIK_ENABLED}" != "true" ]; then
    echo "Cloudflare firewall rules not applicable for this node type"
    exit 0
fi

# Function to remove existing Cloudflare rules
remove_cloudflare_rules() {
    echo "Removing existing Cloudflare UFW rules..."
    
    # Remove IPv4 rules
    while ufw status numbered | grep -q "Cloudflare IPv4"; do
        RULE_NUM=$(ufw status numbered | grep "Cloudflare IPv4" | head -1 | awk '{print $1}' | tr -d '[]')
        if [ -n "$RULE_NUM" ]; then
            ufw --force delete "$RULE_NUM"
        else
            break
        fi
    done
    
    # Remove IPv6 rules
    while ufw status numbered | grep -q "Cloudflare IPv6"; do
        RULE_NUM=$(ufw status numbered | grep "Cloudflare IPv6" | head -1 | awk '{print $1}' | tr -d '[]')
        if [ -n "$RULE_NUM" ]; then
            ufw --force delete "$RULE_NUM"
        else
            break
        fi
    done
}

# Function to fetch and add current Cloudflare IPs
add_cloudflare_rules() {
    echo "Fetching current Cloudflare IP ranges..."
    
    # Fetch IPv4 ranges
    CLOUDFLARE_IPV4=$(curl -s "${CLOUDFLARE_IPV4_URL}")
    if [ -z "$CLOUDFLARE_IPV4" ]; then
        echo "‚ùå Failed to fetch Cloudflare IPv4 ranges"
        exit 1
    fi
    
    # Fetch IPv6 ranges  
    CLOUDFLARE_IPV6=$(curl -s "${CLOUDFLARE_IPV6_URL}")
    if [ -z "$CLOUDFLARE_IPV6" ]; then
        echo "‚ùå Failed to fetch Cloudflare IPv6 ranges"
        exit 1
    fi
    
    # Add IPv4 rules
    echo "Adding current Cloudflare IPv4 ranges..."
    while IFS= read -r ip; do
        if [ -n "$ip" ]; then
            ufw allow from "$ip" to any port 80 comment "Cloudflare IPv4 HTTP"
            ufw allow from "$ip" to any port 443 comment "Cloudflare IPv4 HTTPS"
        fi
    done <<< "$CLOUDFLARE_IPV4"
    
    # Add IPv6 rules
    echo "Adding current Cloudflare IPv6 ranges..."
    while IFS= read -r ip; do
        if [ -n "$ip" ]; then
            ufw allow from "$ip" to any port 80 comment "Cloudflare IPv6 HTTP"
            ufw allow from "$ip" to any port 443 comment "Cloudflare IPv6 HTTPS"
        fi
    done <<< "$CLOUDFLARE_IPV6"
}

# Main execution
main() {
    # Check if UFW is active
    if ! ufw status | grep -q "Status: active"; then
        echo "‚ùå UFW is not active"
        exit 1
    fi
    
    # Remove old rules and add new ones
    remove_cloudflare_rules
    add_cloudflare_rules
    
    echo "‚úÖ Cloudflare IP ranges updated successfully"
    echo ""
    echo "üìä Current UFW status:"
    ufw status numbered | grep -E "(Cloudflare|80|443)" || echo "No Cloudflare rules found"
}

# Run main function
main "$@" 