================================================================
{{ recovery_type | upper }} RECOVERY REPORT
================================================================

Recovery Information:
-------------------
Date/Time: {{ ansible_date_time.iso8601 }}
Target Host: {{ inventory_hostname }} ({{ ansible_default_ipv4.address }})
Recovery Type: {{ recovery_type }}
{% if recovery_timestamp is defined %}
Target Time: {{ recovery_timestamp }}
{% endif %}

Backup Details:
--------------
Backup Source: {{ backup_source_used | upper }}
Repository Used: {{ backup_repository_used }}
Snapshot ID: {{ snapshot_id }}
Snapshot Info: {{ snapshot_details }}

Recovery Results:
----------------
Status: {{ 'SUCCESS' if restore_exit_code == 0 else 'FAILED' }}
Exit Code: {{ restore_exit_code }}
{% if service_restored != 'N/A' %}
Service Restored: {{ service_restored }}
{% endif %}

Recovery Location: {{ recovery_target | default('/') }}

System Information:
------------------
OS: {{ ansible_distribution }} {{ ansible_distribution_version }}
Kernel: {{ ansible_kernel }}
Architecture: {{ ansible_architecture }}
Total Memory: {{ ansible_memtotal_mb }}MB
Available Disk: {{ ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_available') | first | filesizeformat }}

Validation Checklist:
--------------------
[ ] Verify Docker services: docker service ls
[ ] Check Swarm status: docker node ls  
[ ] Test Tailscale connectivity: tailscale status
[ ] Validate application access
[ ] Update DNS records if needed
[ ] Resume monitoring and alerting

Notes:
------
This recovery was performed using automated Ansible playbooks.
All restored data should be verified before resuming production operations.

Report generated by: {{ ansible_user }}@{{ ansible_hostname }}
================================================================ 