---
# System Update Role - Main Tasks
# Handles system updates and essential package installation

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  tags: [system_update, phase1]

- name: Upgrade all packages
  ansible.builtin.apt:
    upgrade: dist
    autoremove: yes
    autoclean: yes
  tags: [system_update, phase1]

- name: Install essential packages
  ansible.builtin.apt:
    name:
      - curl
      - wget
      - git
      - vim
      - htop
      - unzip
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - gnupg
      - lsb-release
      - ufw
      - logrotate
      - python3
      - python3-pip
    state: present
  tags: [system_update, phase1]

- name: Configure automatic security updates
  ansible.builtin.copy:
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    content: |
      APT::Periodic::Update-Package-Lists "1";
      APT::Periodic::Unattended-Upgrade "1";
      APT::Periodic::Download-Upgradeable-Packages "1";
      APT::Periodic::AutocleanInterval "7";
    mode: '0644'
  tags: [system_update, phase1]

- name: Configure unattended upgrades
  ansible.builtin.blockinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    block: |
      Unattended-Upgrade::Allowed-Origins {
          "${distro_id}:${distro_codename}-security";
          "${distro_id}ESMApps:${distro_codename}-apps-security";
          "${distro_id}ESM:${distro_codename}-infra-security";
      };
      Unattended-Upgrade::Remove-Unused-Dependencies "true";
      Unattended-Upgrade::Automatic-Reboot "false";
      Unattended-Upgrade::Automatic-Reboot-Time "02:00";
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Unattended Upgrades"
    create: true
    mode: '0644'
  when: security_updates_enabled | default(true)
  tags:
    - system_update
    - security

- name: Enable unattended upgrades service
  ansible.builtin.systemd:
    name: unattended-upgrades
    enabled: true
    state: started
  when: security_updates_enabled | default(true)
  tags:
    - system_update
    - security

- name: Check if reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_file
  tags:
    - system_update

- name: Set reboot required fact
  ansible.builtin.set_fact:
    system_reboot_required: "{{ reboot_required_file.stat.exists }}"
  tags:
    - system_update 