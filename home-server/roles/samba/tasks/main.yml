---
# Samba Role - Main Tasks
# Interactive Samba setup with secure configuration

- name: Display Samba setup banner
  ansible.builtin.debug:
    msg:
      - "================================================================"
      - "🗂️  SAMBA FILE SHARING SETUP"
      - "================================================================"
      - ""
      - "Setting up secure SMB/CIFS file sharing for your MergerFS pool"
      - ""
      - "✅ Secure authentication with interactive password setup"
      - "✅ Windows network drive access to {{ mergerfs_pool_path | default('/srv/storage') }}"
      - "✅ Docker container integration"
      - "✅ Cross-platform compatibility (Windows/Mac/Linux)"
      - "✅ Firewall configuration for local network access"
      - ""
  tags:
    - samba
    - banner

- name: Check if MergerFS pool exists
  ansible.builtin.stat:
    path: "{{ mergerfs_pool_path | default('/srv/storage') }}"
  register: mergerfs_pool_stat
  when: samba_depends_on_mergerfs | default(true)
  tags:
    - samba
    - validation

- name: Check if MergerFS was skipped
  ansible.builtin.set_fact:
    mergerfs_was_skipped: "{{ hostvars[inventory_hostname].mergerfs_skipped | default(false) }}"
  tags:
    - samba
    - validation

- name: Display MergerFS skip notice for Samba
  ansible.builtin.debug:
    msg:
      - "================================================================"
      - "🗂️  SAMBA SETUP WITH LOCAL STORAGE"
      - "================================================================"
      - ""
      - "MergerFS was skipped (no additional drives found)."
      - "Samba will be configured to share local storage instead:"
      - ""
      - "📁 Share path: {{ samba_fallback_path | default('/srv/share') }}"
      - "💾 Storage: Local filesystem on system drive"
      - "⚠️  Limited by system drive capacity"
      - ""
      - "To use MergerFS storage pool in the future:"
      - "• Add additional drives to the system"
      - "• Re-run the MergerFS setup playbook"
      - "• Update Samba configuration to use MergerFS pool"
      - ""
  when: 
    - samba_depends_on_mergerfs | default(true)
    - mergerfs_was_skipped | default(false)
  tags:
    - samba
    - validation

- name: Warn if MergerFS pool not found (standard case)
  ansible.builtin.debug:
    msg:
      - "⚠️  WARNING: MergerFS pool not found at {{ mergerfs_pool_path | default('/srv/storage') }}"
      - "Samba will be configured but the share path may not exist"
      - "Ensure MergerFS setup is completed first"
  when: 
    - samba_depends_on_mergerfs | default(true)
    - not mergerfs_pool_stat.stat.exists
    - not (mergerfs_was_skipped | default(false))
  tags:
    - samba
    - validation

- name: Set storage path based on MergerFS availability
  ansible.builtin.set_fact:
    samba_storage_path: "{{ samba_fallback_path | default('/srv/share') if mergerfs_was_skipped else mergerfs_pool_path | default('/srv/storage') }}"
  tags:
    - samba
    - validation

- name: Update package cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  tags:
    - samba
    - packages

- name: Install Samba packages
  ansible.builtin.apt:
    name: "{{ samba_packages + ['expect'] }}"
    state: present
  tags:
    - samba
    - packages

- name: Create backup directory for Samba configuration
  ansible.builtin.file:
    path: "{{ samba_config_backup_dir }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  when: samba_backup_config | default(true)
  tags:
    - samba
    - backup

- name: Backup original Samba configuration
  ansible.builtin.copy:
    src: /etc/samba/smb.conf
    dest: "{{ samba_config_backup_dir }}/smb.conf.original.{{ ansible_date_time.epoch }}"
    remote_src: true
    backup: true
  when: samba_backup_config | default(true)
  failed_when: false
  tags:
    - samba
    - backup

- name: Check if Samba user already exists
  ansible.builtin.shell: "getent passwd {{ samba_username }}"
  register: samba_user_exists
  failed_when: false
  changed_when: false
  tags:
    - samba
    - user

- name: Interactive Samba password setup
  block:
    - name: Prompt for Samba password (interactive)
      ansible.builtin.pause:
        prompt: |
          
          ================================================================
          🔒 SAMBA USER PASSWORD SETUP
          ================================================================
          
          Please create a secure password for the Samba user '{{ samba_username }}'.
          This password will be used for:
          
          • Windows network drive access (\\{{ ansible_default_ipv4.address }}\storage)
          • SMB/CIFS file sharing authentication
          • Cross-platform access to your MergerFS pool
          
          Password requirements:
          • Minimum {{ samba_password_min_length }} characters
          • Mix of letters, numbers, and symbols recommended
          • No spaces or special shell characters
          
          Enter password for user '{{ samba_username }}':
        echo: false
      register: samba_password_input
      when: samba_interactive_mode | default(true)
      tags:
        - samba
        - interactive

    - name: Validate password strength
      ansible.builtin.assert:
        that:
          - samba_password_input.user_input | length >= (samba_password_min_length | default(8))
        fail_msg: "Password must be at least {{ samba_password_min_length | default(8) }} characters long"
      when: 
        - samba_interactive_mode | default(true)
        - samba_require_strong_password | default(true)
      tags:
        - samba
        - validation

    - name: Set password fact
      ansible.builtin.set_fact:
        samba_user_password: "{{ samba_password_input.user_input }}"
      when: samba_interactive_mode | default(true)
      no_log: true
      tags:
        - samba
        - interactive

  when: samba_interactive_mode | default(true)
  tags:
    - samba
    - user

- name: Create Samba system user
  ansible.builtin.user:
    name: "{{ samba_username }}"
    system: "{{ samba_user_system | default(true) }}"
    shell: "{{ samba_user_shell }}"
    home: "{{ samba_user_home }}"
    create_home: false
    comment: "Samba service user"
  tags:
    - samba
    - user

- name: Configure Samba password for user
  ansible.builtin.expect:
    command: "smbpasswd -a {{ samba_username }}"
    responses:
      'New SMB password:': "{{ samba_user_password }}"
      'Retype new SMB password:': "{{ samba_user_password }}"
    timeout: 30
  when: samba_user_password is defined
  no_log: true
  register: samba_password_result
  changed_when: true
  failed_when: false
  tags:
    - samba
    - user

- name: Configure Samba password for user (fallback method)
  ansible.builtin.shell: |
    printf '%s\n%s\n' "{{ samba_user_password }}" "{{ samba_user_password }}" | smbpasswd -a -s {{ samba_username }}
  when: 
    - samba_user_password is defined
    - samba_password_result.failed | default(false)
  no_log: true
  register: samba_password_fallback
  changed_when: true
  tags:
    - samba
    - user

- name: Enable Samba user
  ansible.builtin.shell: "smbpasswd -e {{ samba_username }}"
  when: samba_user_password is defined
  tags:
    - samba
    - user

- name: Generate Samba configuration
  ansible.builtin.template:
    src: smb.conf.j2
    dest: /etc/samba/smb.conf
    backup: true
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload samba
  tags:
    - samba
    - config

- name: Validate Samba configuration
  ansible.builtin.shell: "testparm -s"
  register: samba_config_test
  changed_when: false
  failed_when: samba_config_test.rc != 0
  tags:
    - samba
    - validation

- name: Create MergerFS pool directory if needed
  ansible.builtin.file:
    path: "{{ samba_storage_path }}"
    state: directory
    owner: "{{ samba_username }}"
    group: "{{ samba_username }}"
    mode: '0775'
  when: samba_create_media_dirs | default(true)
  tags:
    - samba
    - directories

- name: Create media subdirectories in storage path
  ansible.builtin.file:
    path: "{{ samba_storage_path }}/{{ item }}"
    state: directory
    owner: "{{ samba_username }}"
    group: "{{ samba_username }}"
    mode: '0775'
  loop: "{{ samba_media_subdirs | default([]) }}"
  when: samba_create_media_dirs | default(true)
  tags:
    - samba
    - directories

- name: Set ownership of storage path to Samba user
  ansible.builtin.file:
    path: "{{ samba_storage_path }}"
    owner: "{{ samba_username }}"
    group: "{{ samba_username }}"
    mode: '0775'
    recurse: false
  when: 
    - samba_storage_path is defined
    - mergerfs_pool_stat.stat.exists | default(false) or mergerfs_was_skipped | default(false)
  tags:
    - samba
    - permissions

- name: Configure UFW firewall for Samba
  block:
    - name: Allow Samba from local networks
      community.general.ufw:
        rule: allow
        src: "{{ item }}"
        port: "445"
        proto: tcp
        comment: "Samba SMB access from {{ item }}"
      loop: "{{ samba_allowed_networks }}"
      notify: reload firewall
      tags:
        - samba
        - firewall

    - name: Allow NetBIOS from local networks
      community.general.ufw:
        rule: allow
        src: "{{ item }}"
        port: "139"
        proto: tcp
        comment: "Samba NetBIOS access from {{ item }}"
      loop: "{{ samba_allowed_networks }}"
      notify: reload firewall
      tags:
        - samba
        - firewall

    - name: Allow NetBIOS UDP from local networks
      community.general.ufw:
        rule: allow
        src: "{{ item }}"
        port: "137:138"
        proto: udp
        comment: "Samba NetBIOS UDP from {{ item }}"
      loop: "{{ samba_allowed_networks }}"
      notify: reload firewall
      tags:
        - samba
        - firewall

  when: samba_firewall_enabled | default(true)
  tags:
    - samba
    - firewall

- name: Start and enable Samba services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop: "{{ samba_services }}"
  tags:
    - samba
    - services

- name: Wait for Samba services to be ready
  ansible.builtin.wait_for:
    port: 445
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 30
  tags:
    - samba
    - validation

- name: Test Samba configuration and connectivity
  block:
    - name: Test SMB connectivity locally
      ansible.builtin.shell: "smbclient -L localhost -U {{ samba_username }}%{{ samba_user_password }} -N"
      register: samba_local_test
      no_log: true
      changed_when: false
      failed_when: false

    - name: Display local connectivity test result
      ansible.builtin.debug:
        msg:
          - "🧪 SAMBA LOCAL CONNECTIVITY TEST"
          - "================================="
          - "{{ samba_local_test.stdout_lines | join('\n') if samba_local_test.rc == 0 else 'Connection test failed - check configuration' }}"
          - ""
      when: samba_verify_setup | default(true)

    - name: Test storage share access
      ansible.builtin.shell: "smbclient //localhost/storage -U {{ samba_username }}%{{ samba_user_password }} -c 'ls'"
      register: samba_share_test
      no_log: true
      changed_when: false
      failed_when: false

    - name: Display share access test result
      ansible.builtin.debug:
        msg:
          - "📁 STORAGE SHARE ACCESS TEST"
          - "============================"
          - "{{ 'Share accessible - connection successful' if samba_share_test.rc == 0 else 'Share access failed - check permissions' }}"
          - ""
      when: samba_verify_setup | default(true)

  when: 
    - samba_test_connection | default(true)
    - samba_user_password is defined
  tags:
    - samba
    - testing

- name: Display Samba setup completion
  ansible.builtin.debug:
    msg: |
      ================================================================
      🎉 SAMBA FILE SHARING SETUP COMPLETED!
      ================================================================
      
      ✅ Samba installed and configured
      ✅ User '{{ samba_username }}' created with secure password
      {% if mergerfs_was_skipped | default(false) %}
      ✅ Local storage shared as 'storage' ({{ samba_storage_path }})
      ⚠️  Using system drive storage (limited capacity)
      {% else %}
      ✅ MergerFS pool shared as 'storage'
      {% endif %}
      ✅ Firewall configured for local network access
      ✅ Services started and enabled
      
      🔗 NETWORK ACCESS:
         Windows: \\{{ ansible_default_ipv4.address }}\storage
         macOS: smb://{{ ansible_default_ipv4.address }}/storage
         Linux: smb://{{ ansible_default_ipv4.address }}/storage
      
      🔑 CREDENTIALS:
         Username: {{ samba_username }}
         Password: [Password you entered]
      
      📁 SHARED CONTENT:
         Share Name: storage
         Path: {{ samba_storage_path }}
         Available subdirectories:
      {% for dir in samba_media_subdirs | default([]) %}
         • {{ dir }}
      {% endfor %}
      
      🐳 DOCKER INTEGRATION:
         Use: {{ samba_storage_path }}/[subfolder]
         Example: {{ samba_storage_path }}/media/movies
      
      {% if mergerfs_was_skipped | default(false) %}
      💡 FUTURE STORAGE EXPANSION:
         • Add additional drives to expand beyond system storage
         • Run MergerFS setup to create unified storage pool
         • Update Samba to use MergerFS pool for larger capacity
      
      {% endif %}
      🔧 MANAGEMENT COMMANDS:
         Check status: systemctl status smbd
         View connections: smbstatus
         Test config: testparm
         View logs: tail -f /var/log/samba/log.smbd
      
      🚀 Your network file sharing is ready!
  tags:
    - samba
    - summary 