---
# Tailscale Role - Main Tasks
# Handles Tailscale installation and configuration for SSH access

- name: Add Tailscale GPG key
  ansible.builtin.get_url:
    url: "https://pkgs.tailscale.com/stable/ubuntu/{{ ansible_distribution_release }}.noarmor.gpg"
    dest: /usr/share/keyrings/tailscale-archive-keyring.gpg
    mode: '0644'
  tags:
    - tailscale
    - installation

- name: Add Tailscale repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/tailscale-archive-keyring.gpg] https://pkgs.tailscale.com/stable/ubuntu {{ ansible_distribution_release }} main"
    filename: tailscale
    state: present
  tags:
    - tailscale
    - installation

- name: Update package cache after adding Tailscale repository
  ansible.builtin.apt:
    update_cache: true
  tags:
    - tailscale
    - installation

- name: Install Tailscale
  ansible.builtin.apt:
    name: tailscale
    state: "{{ 'latest' if (tailscale_version | default('latest')) == 'latest' else 'present' }}"
    version: "{{ (tailscale_version | default('latest')) if (tailscale_version | default('latest')) != 'latest' else omit }}"
  register: tailscale_installed
  tags:
    - tailscale
    - installation

- name: Enable and start Tailscale service
  ansible.builtin.systemd:
    name: tailscaled
    enabled: true
    state: started
  tags:
    - tailscale
    - service

- name: Wait for Tailscale service to be ready
  ansible.builtin.wait_for:
    timeout: 10
  tags:
    - tailscale
    - service

- name: Check if Tailscale is already authenticated (with timeout)
  ansible.builtin.command: timeout 30 tailscale status --json
  register: tailscale_status
  changed_when: false
  failed_when: false
  tags:
    - tailscale
    - configuration

- name: Debug Tailscale status output
  ansible.builtin.debug:
    msg:
      - "Tailscale status return code: {{ tailscale_status.rc }}"
      - "Tailscale status stdout: {{ tailscale_status.stdout if tailscale_status.stdout else 'No output' }}"
      - "Tailscale status stderr: {{ tailscale_status.stderr if tailscale_status.stderr else 'No errors' }}"
  tags:
    - tailscale
    - configuration
    - debug

- name: Parse Tailscale status (with error handling)
  ansible.builtin.set_fact:
    tailscale_authenticated: "{{ (tailscale_status.stdout | from_json).BackendState == 'Running' }}"
    tailscale_backend_state: "{{ (tailscale_status.stdout | from_json).BackendState | default('Unknown') }}"
  when: 
    - tailscale_status.rc == 0
    - tailscale_status.stdout
    - tailscale_status.stdout | length > 0
    - (tailscale_status.stdout | from_json) is defined
  tags:
    - tailscale
    - configuration

- name: Set tailscale_authenticated to false if status check failed
  ansible.builtin.set_fact:
    tailscale_authenticated: false
    tailscale_backend_state: "StatusCheckFailed"
  when: 
    - tailscale_status.rc != 0 or 
      not tailscale_status.stdout or 
      tailscale_status.stdout | length == 0
  tags:
    - tailscale
    - configuration

- name: Verify auth key is configured
  ansible.builtin.assert:
    that:
      - (tailscale_auth_key | default('')) != ""
      - tailscale_auth_key is defined
    fail_msg: |
      Tailscale auth key is not configured!
      Please add vault_tailscale_auth_key to your group_vars/vault.yml file.
      Get an auth key from: https://login.tailscale.com/admin/settings/keys
    success_msg: "Tailscale auth key is configured"
  tags:
    - tailscale
    - configuration

- name: Configure Tailscale with auth key
  ansible.builtin.command: >
    timeout 60 tailscale up 
    --accept-routes={{ (tailscale_accept_routes | default(true)) | lower }}
    --accept-dns={{ (tailscale_accept_dns | default(true)) | lower }}
    --hostname={{ tailscale_hostname | default(inventory_hostname) }}
    {% if (tailscale_ssh_enabled | default(true)) %}--ssh{% endif %}
    --authkey={{ tailscale_auth_key }}
  register: tailscale_up_result
  when: not tailscale_authenticated
  tags:
    - tailscale
    - configuration

- name: Wait for Tailscale to establish connection
  ansible.builtin.wait_for:
    timeout: 30
  when: tailscale_up_result is changed
  tags:
    - tailscale
    - configuration

- name: Verify Tailscale connection after setup
  ansible.builtin.command: timeout 30 tailscale status
  register: tailscale_final_status
  changed_when: false
  failed_when: false
  retries: 3
  delay: 10
  tags:
    - tailscale
    - verification

- name: Get Tailscale IP address
  ansible.builtin.command: timeout 30 tailscale ip --4
  register: tailscale_ip_result
  changed_when: false
  failed_when: false
  retries: 3
  delay: 5
  tags:
    - tailscale
    - configuration

- name: Set Tailscale IP fact
  ansible.builtin.set_fact:
    tailscale_ip: "{{ tailscale_ip_result.stdout.strip() }}"
  when: 
    - tailscale_ip_result.rc == 0
    - tailscale_ip_result.stdout
  tags:
    - tailscale
    - configuration

- name: Display Tailscale configuration
  ansible.builtin.debug:
    msg:
      - "================================================================"
      - "üåê TAILSCALE CONFIGURATION STATUS"
      - "================================================================"
      - ""
      - "‚úÖ Service Status: {{ 'Running' if tailscale_final_status.rc == 0 else 'Issues Detected' }}"
      - "‚úÖ Backend State: {{ tailscale_backend_state | default('Unknown') }}"
      - "‚úÖ Hostname: {{ tailscale_hostname | default(inventory_hostname) }}"
      - "‚úÖ IP Address: {{ tailscale_ip | default('Not available') }}"
      - "‚úÖ SSH Enabled: {{ tailscale_ssh_enabled | default(true) }}"
      - ""
      - "üîí SSH Access:"
      - "   ssh {{ admin_username | default('admin') }}@{{ tailscale_ip | default('TAILSCALE_IP') }}"
      - ""
      - "üìä Full Status:"
      - "{{ tailscale_final_status.stdout.split('\n') if tailscale_final_status.stdout else ['Status not available'] }}"
      - ""
  tags:
    - tailscale
    - configuration

- name: Warning if Tailscale setup has issues
  ansible.builtin.debug:
    msg:
      - "‚ö†Ô∏è  TAILSCALE SETUP WARNING ‚ö†Ô∏è"
      - "Tailscale may not be fully connected"
      - "Check status manually: tailscale status"
      - "Check logs: journalctl -u tailscaled"
      - "Verify network connectivity and firewall settings"
  when: 
    - tailscale_final_status.rc != 0 or 
      not tailscale_ip or 
      tailscale_backend_state != 'Running'
  tags:
    - tailscale
    - configuration 