# Example Application with Traefik Integration
# ============================================
#
# This example shows how to deploy any application with Traefik labels
# for automatic SSL certificates and routing after running setup.yml
#
# USAGE:
# 1. Copy this template: cp service-templates/example-app.yml /opt/docker/myapp/docker-compose.yml
# 2. Update DOMAIN_NAME in environment variables
# 3. Deploy: cd /opt/docker/myapp && docker-compose up -d
# 4. Access: https://myapp.yourdomain.com (automatic SSL!)

version: '3.8'

services:
  # Example web application (replace with your app)
  webapp:
    image: nginx:alpine
    container_name: example-webapp
    restart: unless-stopped
    
    networks:
      - app-network
    
    volumes:
      - ./html:/usr/share/nginx/html:ro
    
    environment:
      - DOMAIN_NAME=myapp.yourdomain.com  # Change this to your domain
    
    labels:
      # Enable Traefik for this service
      - "traefik.enable=true"
      
      # HTTP router (redirects to HTTPS automatically)
      - "traefik.http.routers.webapp-http.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.webapp-http.entrypoints=web"
      
      # HTTPS router with automatic SSL and custom error pages
      - "traefik.http.routers.webapp.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.webapp.entrypoints=websecure"
      - "traefik.http.routers.webapp.tls.certresolver=letsencrypt"
      - "traefik.http.routers.webapp.middlewares=security-headers,error-pages"
      
      # Service configuration
      - "traefik.http.services.webapp.loadbalancer.server.port=80"

  # Example database (internal only, no Traefik labels)
  database:
    image: postgres:15-alpine
    container_name: example-db
    restart: unless-stopped
    
    networks:
      - app-network
    
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: myapp
      POSTGRES_PASSWORD: secure_password_here
    
    volumes:
      - db_data:/var/lib/postgresql/data
    
    # No Traefik labels = not exposed to internet

networks:
  # Use the external network created by Traefik
  app-network:
    external: true

volumes:
  db_data:
    driver: local 