---
# Cloudflared Configuration for Home Server
# Provides secure external access via Cloudflare tunnel

# Cloudflared Version
cloudflared_version: "latest"
cloudflare_manager_version: "latest"

# Cloudflared Directories
cloudflared_root_dir: "{{ docker_stack_root }}/cloudflared"
cloudflared_config_dir: "{{ cloudflared_root_dir }}/config"
cloudflared_credentials_dir: "{{ cloudflared_root_dir }}/credentials"

# Network Configuration
cloudflared_network_name: "home-network"

# Tunnel Configuration
cloudflared_tunnel_name: "home-server"
cloudflared_tunnel_id: "{{ vault_cloudflared_tunnel_id | default('') }}"
cloudflared_external_domain: "{{ vault_cloudflared_external_domain | default('gooffy.in') }}"

# Cloudflare API Configuration
cloudflared_api_token: "{{ vault_cloudflared_api_token | default('') }}"
cloudflared_account_id: "{{ vault_cloudflared_account_id | default('') }}"

# Service Discovery Configuration
cloudflared_auto_discovery: true
cloudflared_auto_http_host_header: true
cloudflared_default_service: "http://nginx-proxy:80"

# Traditional Cloudflared Configuration (fallback)
cloudflared_traditional_enabled: true
cloudflared_ingress_rules:
  - hostname: "{{ cloudflared_external_domain }}"
    service: "{{ cloudflared_default_service }}"
  - service: "http_status:404"  # Default fallback

# Health Check Configuration
cloudflared_health_check:
  enabled: true
  path: "/health"
  interval: "30s"

# Logging Configuration
cloudflared_log_level: "info"
cloudflared_no_autoupdate: true

# Security Configuration
cloudflared_trusted_certificates: []
cloudflared_tls_timeout: "10s"
cloudflared_keep_alive_connections: 100
cloudflared_keep_alive_timeout: "1m30s"

# Performance Tuning
cloudflared_retries: 5
cloudflared_retry_backoff: "1s"
cloudflared_retry_backoff_max: "5m"

# Metrics Configuration
cloudflared_metrics: "127.0.0.1:8080"
cloudflared_metrics_update_freq: "5s"

# No UFW rules needed - cloudflared connects outbound only
# All incoming traffic is through Cloudflare's network 