#!/bin/bash
# {{ ansible_managed }}
# Docker cleanup script for production
# Generated by Ansible docker_production role

# Set error handling
set -euo pipefail

# Logging
LOG_FILE="/var/log/docker-cleanup.log"
exec 1> >(tee -a "$LOG_FILE")
exec 2>&1

echo "$(date): Starting Docker cleanup"

# Clean up stopped containers (older than {{ docker_cleanup_retention.containers }})
echo "Cleaning stopped containers..."
docker container prune -f --filter "until={{ docker_cleanup_retention.containers }}"

# Clean up dangling images
echo "Cleaning dangling images..."
docker image prune -f

# Clean up unused images (older than {{ docker_cleanup_retention.images }})
echo "Cleaning unused images..."
docker image prune -af --filter "until={{ docker_cleanup_retention.images }}"

# Clean up unused volumes (older than {{ docker_cleanup_retention.volumes }})
echo "Cleaning unused volumes..."
docker volume prune -f --filter "until={{ docker_cleanup_retention.volumes }}"

# Clean up unused networks
echo "Cleaning unused networks..."
docker network prune -f

# Clean up build cache (keep {{ docker_cleanup_retention.build_cache_keep }})
echo "Cleaning build cache..."
docker builder prune -af --keep-storage={{ docker_cleanup_retention.build_cache_keep }}

# Show disk usage after cleanup
echo "Docker disk usage after cleanup:"
docker system df

echo "$(date): Docker cleanup completed" 