---
# Traefik Role - Main Tasks
# Automatically configures Traefik reverse proxy with Let's Encrypt SSL

- name: Create Traefik directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ admin_username }}"
    group: docker
    mode: '0755'
  loop:
    - "{{ traefik_root_dir }}"
    - "{{ traefik_data_dir }}"
    - "{{ traefik_config_dir }}"
    - "{{ traefik_config_dir }}/error-pages"
  tags:
    - traefik
    - directories

- name: Secure Traefik data directory
  ansible.builtin.file:
    path: "{{ traefik_data_dir }}"
    mode: '0600'
    owner: "{{ admin_username }}"
    group: docker
  tags:
    - traefik
    - security

- name: Create app-network for Traefik
  community.docker.docker_network:
    name: "{{ traefik_network_name }}"
    driver: bridge
    state: present
  tags:
    - traefik
    - network

- name: Generate error pages from template
  ansible.builtin.template:
    src: error-page.html.j2
    dest: "{{ traefik_config_dir }}/error-pages/{{ item.code }}.html"
    owner: "{{ admin_username }}"
    group: docker
    mode: '0644'
  vars:
    error_code: "{{ item.code }}"
    error_title: "{{ item.title }}"
    error_message: "{{ item.message }}"
    error_color: "{{ item.color }}"
  loop: "{{ traefik_error_pages }}"
  tags:
    - traefik
    - error-pages

- name: Generate Traefik Docker Compose configuration
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ traefik_root_dir }}/docker-compose.yml"
    owner: "{{ admin_username }}"
    group: docker
    mode: '0644'
  notify: restart traefik
  tags:
    - traefik
    - config

- name: Generate Traefik environment file
  ansible.builtin.template:
    src: env.j2
    dest: "{{ traefik_root_dir }}/.env"
    owner: "{{ admin_username }}"
    group: docker
    mode: '0600'
  notify: restart traefik
  tags:
    - traefik
    - config
    - sensitive

- name: Create ACME storage file with correct permissions
  ansible.builtin.file:
    path: "{{ traefik_data_dir }}/acme.json"
    state: touch
    owner: "{{ admin_username }}"
    group: docker
    mode: '0600'
  tags:
    - traefik
    - ssl

- name: Add UFW rules for Traefik HTTP/HTTPS access
  community.general.ufw:
    rule: allow
    route: true
    proto: tcp
    from_ip: any
    to_port: "{{ item }}"
    comment: "Traefik {{ item == '80' and 'HTTP' or 'HTTPS' }} access"
  loop:
    - "80"
    - "443"
  tags:
    - traefik
    - firewall

- name: Start and enable Traefik
  community.docker.docker_compose:
    project_src: "{{ traefik_root_dir }}"
    state: present
    build: false
  tags:
    - traefik
    - start

- name: Wait for Traefik to be ready
  ansible.builtin.wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 80
    timeout: 60
  tags:
    - traefik
    - validation

- name: Verify Traefik is running
  community.docker.docker_container_info:
    name: traefik
  register: traefik_info
  tags:
    - traefik
    - validation

- name: Display Traefik status
  ansible.builtin.debug:
    msg:
      - "================================================================"
      - "üåê TRAEFIK REVERSE PROXY CONFIGURED"
      - "================================================================"
      - ""
      - "‚úÖ Traefik is running: {{ traefik_info.container.State.Status }}"
      - "‚úÖ Network created: {{ traefik_network_name }}"
      - "‚úÖ SSL certificates: Let's Encrypt HTTP challenge"
      - "‚úÖ UFW rules: HTTP/HTTPS traffic allowed"
      - "‚úÖ Error pages: {{ traefik_error_pages | length }} custom pages generated"
      - ""
      - "üîß Management:"
      - "   Config Dir: {{ traefik_root_dir }}"
      - "   Data Dir: {{ traefik_data_dir }}"
      - "   Error Pages: {{ traefik_config_dir }}/error-pages/"
      - ""
      - "üìã To expose a service, add these labels to your containers:"
      - "   traefik.enable=true"
      - "   traefik.http.routers.myapp.rule=Host('myapp.example.com')"
      - "   traefik.http.routers.myapp.entrypoints=websecure"
      - "   traefik.http.routers.myapp.tls.certresolver=letsencrypt"
      - "   traefik.http.routers.myapp.middlewares=error-pages  # Optional: custom error pages"
      - ""
  tags:
    - traefik
    - status 