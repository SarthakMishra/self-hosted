# Postiz Social Media Management Environment Configuration
# Copy this file to .env and customize for your installation

# ==============================================
# DOMAIN CONFIGURATION
# ==============================================

# The domain where Postiz will be accessible
# Example: postiz.yourdomain.com, social.yourdomain.com
POSTIZ_DOMAIN=postiz.example.com

# ==============================================
# SECURITY CONFIGURATION
# ==============================================

# JWT Secret for token signing (REQUIRED)
# Generate a strong random string (32+ characters)
# You can use: openssl rand -hex 32
POSTIZ_JWT_SECRET=your_very_long_random_jwt_secret_key_here_at_least_32_chars

# Disable user registration after initial setup
# false = allow registration, true = disable registration
POSTIZ_DISABLE_REGISTRATION=false

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# PostgreSQL database configuration
# These credentials will be used for both the database and application
POSTGRES_DB=postiz
POSTGRES_USER=postiz_user
POSTGRES_PASSWORD=your_secure_database_password

# Optional: PostgreSQL initialization arguments
# Default: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C

# ==============================================
# REDIS CONFIGURATION
# ==============================================

# Optional: Redis password for additional security
# Leave empty for no password (default)
REDIS_PASSWORD=

# ==============================================
# STORAGE CONFIGURATION
# ==============================================

# Storage provider for uploaded files
# Options: local, s3, gcs, azure
POSTIZ_STORAGE_PROVIDER=local

# Upload directory for local storage
# Default: /uploads (recommended to keep default)
POSTIZ_UPLOAD_DIRECTORY=/uploads

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================

# Node environment
# Options: production, development
NODE_ENV=production

# ==============================================
# ADVANCED CONFIGURATION (OPTIONAL)
# ==============================================

# Custom S3 configuration (if using S3 storage)
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-postiz-bucket
# AWS_S3_ENDPOINT=https://s3.amazonaws.com

# Google Cloud Storage configuration (if using GCS)
# GCS_BUCKET=your-postiz-bucket
# GCS_PROJECT_ID=your-project-id
# GCS_KEY_FILE=/path/to/service-account.json

# Azure Blob Storage configuration (if using Azure)
# AZURE_STORAGE_ACCOUNT=your_storage_account
# AZURE_STORAGE_ACCESS_KEY=your_access_key
# AZURE_STORAGE_CONTAINER=your-container

# Custom file size limits (in bytes)
# MAX_FILE_SIZE=10485760  # 10MB default

# Social media API rate limiting
# RATE_LIMIT_REQUESTS=100
# RATE_LIMIT_WINDOW=60000  # 1 minute in milliseconds

# Webhook configuration for social media platforms
# WEBHOOK_SECRET=your_webhook_secret
# WEBHOOK_URL=https://postiz.example.com/api/webhooks

# Analytics and tracking
# ENABLE_ANALYTICS=true
# ANALYTICS_PROVIDER=google  # google, matomo, custom

# Email configuration for notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your_app_password
# SMTP_FROM=noreply@yourdomain.com

# ==============================================
# EXAMPLE VALUES FOR DIFFERENT SETUPS
# ==============================================

# For a personal social media manager:
# POSTIZ_DOMAIN=social.myblog.com
# POSTIZ_DISABLE_REGISTRATION=true
# POSTIZ_STORAGE_PROVIDER=local
# NODE_ENV=production

# For a small agency managing multiple clients:
# POSTIZ_DOMAIN=postiz.agency.com
# POSTIZ_DISABLE_REGISTRATION=false  # Allow team members
# POSTIZ_STORAGE_PROVIDER=s3
# NODE_ENV=production

# For development/testing:
# POSTIZ_DOMAIN=postiz.localhost
# POSTIZ_DISABLE_REGISTRATION=false
# POSTIZ_STORAGE_PROVIDER=local
# NODE_ENV=development

# ==============================================
# SOCIAL MEDIA PLATFORM CONFIGURATION
# ==============================================

# Platform API keys and secrets will be configured within the Postiz interface
# after deployment. You'll need to obtain these from each platform:

# Twitter/X API
# - Create app at: https://developer.twitter.com/
# - Required: API Key, API Secret, Bearer Token

# Facebook/Meta API
# - Create app at: https://developers.facebook.com/
# - Required: App ID, App Secret, Access Token

# LinkedIn API
# - Create app at: https://www.linkedin.com/developers/
# - Required: Client ID, Client Secret

# Instagram API (via Facebook)
# - Use Facebook app configuration
# - Requires Instagram Business account

# TikTok API
# - Create app at: https://developers.tiktok.com/
# - Required: Client Key, Client Secret

# YouTube API
# - Create project at: https://console.cloud.google.com/
# - Enable YouTube Data API v3
# - Required: API Key, Client ID, Client Secret

# Pinterest API
# - Create app at: https://developers.pinterest.com/
# - Required: App ID, App Secret

# ==============================================
# SECURITY NOTES
# ==============================================

# 1. ALWAYS use a strong, unique JWT_SECRET
# 2. Use secure database and Redis passwords
# 3. Set DISABLE_REGISTRATION=true after team setup
# 4. Regularly rotate API keys and secrets
# 5. Monitor file uploads and set appropriate limits
# 6. Use HTTPS in production (handled by Traefik)
# 7. Regularly backup your database and uploads

# ==============================================
# FIRST-TIME SETUP
# ==============================================

# After deployment:
# 1. Visit https://your-domain.com
# 2. Create your admin account
# 3. Configure social media platform integrations
# 4. Set up your posting schedule and content calendar
# 5. Disable registration (set POSTIZ_DISABLE_REGISTRATION=true)
# 6. Configure team members and permissions
# 7. Test posting to all connected platforms

# ==============================================
# BACKUP AND MAINTENANCE
# ==============================================

# Regular maintenance tasks:
# 1. Backup PostgreSQL database regularly
# 2. Backup uploaded files (/uploads volume)
# 3. Monitor disk space for uploads
# 4. Update social media API credentials when needed
# 5. Review user permissions and access
# 6. Monitor posting analytics and engagement 