---
# Nginx Proxy Role - Local Domain Routing
# Replaces Traefik for internal .home domain access

- name: Create shared Docker network for home services
  become_user: "{{ admin_username }}"
  community.docker.docker_network:
    name: "{{ nginx_proxy_network_name }}"
    driver: bridge
    state: present
  tags:
    - nginx_proxy
    - network

- name: Configure UFW to allow nginx-proxy access from local network
  community.general.ufw:
    rule: allow
    port: "{{ nginx_proxy_internal_port }}"
    proto: tcp
    src: "192.168.0.0/16"
    comment: "Nginx-proxy local network access"
  tags:
    - nginx_proxy
    - firewall

- name: Configure UFW to allow nginx-proxy access from Tailscale
  community.general.ufw:
    rule: allow
    port: "{{ nginx_proxy_internal_port }}"
    proto: tcp
    src: "100.64.0.0/10"
    comment: "Nginx-proxy Tailscale access"
  tags:
    - nginx_proxy
    - firewall

- name: Create nginx-proxy directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ admin_username }}"
    group: "{{ admin_username }}"
    mode: '0755'
  loop:
    - "{{ nginx_proxy_root_dir }}"
    - "{{ nginx_proxy_config_dir }}"
    - "{{ nginx_proxy_ssl_dir }}"
  tags:
    - nginx_proxy
    - directories

- name: Create nginx-proxy docker-compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ nginx_proxy_root_dir }}/docker-compose.yml"
    owner: "{{ admin_username }}"
    group: "{{ admin_username }}"
    mode: '0644'
    backup: true
  notify: restart nginx-proxy
  tags:
    - nginx_proxy
    - configuration

- name: Create nginx-proxy environment file
  ansible.builtin.template:
    src: env.j2
    dest: "{{ nginx_proxy_root_dir }}/.env"
    owner: "{{ admin_username }}"
    group: "{{ admin_username }}"
    mode: '0600'
    backup: true
  notify: restart nginx-proxy
  tags:
    - nginx_proxy
    - configuration

- name: Create custom nginx configuration for .home domains
  ansible.builtin.template:
    src: custom.conf.j2
    dest: "{{ nginx_proxy_config_dir }}/custom.conf"
    owner: "{{ admin_username }}"
    group: "{{ admin_username }}"
    mode: '0644'
  notify: restart nginx-proxy
  tags:
    - nginx_proxy
    - configuration

- name: Start and enable nginx-proxy
  become_user: "{{ admin_username }}"
  community.docker.docker_compose_v2:
    project_src: "{{ nginx_proxy_root_dir }}"
    state: present
    remove_orphans: true
  tags:
    - nginx_proxy
    - start

- name: Verify nginx-proxy is running
  ansible.builtin.uri:
    url: "http://{{ nginx_proxy_host_ip }}:{{ nginx_proxy_internal_port }}"
    method: GET
    status_code: [200, 503]  # 503 is expected when no backends are configured
  retries: 5
  delay: 10
  tags:
    - nginx_proxy
    - validation

- name: Display nginx-proxy setup status
  ansible.builtin.debug:
    msg:
      - "================================================================"
      - "üåê NGINX-PROXY SETUP COMPLETED"
      - "================================================================"
      - ""
      - "‚úÖ Nginx-proxy is running and ready for local services"
      - "‚úÖ Configured for .{{ domain_suffix }} domain routing"
      - "‚úÖ Network access: http://{{ nginx_proxy_host_ip }}:{{ nginx_proxy_internal_port }}"
      - "‚úÖ Shared network created: {{ nginx_proxy_network_name }}"
      - ""
      - "üîß Service Configuration:"
      - "   Domain Suffix: .{{ domain_suffix }}"
      - "   Network: {{ nginx_proxy_network_name }}"
      - "   Config Dir: {{ nginx_proxy_config_dir }}"
      - "   Bind IP: {{ nginx_proxy_bind_ip }}"
      - ""
      - "üìù To add services:"
      - "   Add VIRTUAL_HOST=service.{{ domain_suffix }} to your containers"
      - "   Connect containers to network: {{ nginx_proxy_network_name }}"
      - "   Services will be automatically available at http://service.{{ domain_suffix }}"
      - ""
  tags:
    - nginx_proxy
    - status 