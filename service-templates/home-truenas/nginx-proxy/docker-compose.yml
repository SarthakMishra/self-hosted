---
services:

  # nginx-proxy - Reverse proxy for .home domains with automatic HTTPS
  nginx-proxy:
    image: nginxproxy/nginx-proxy:${NGINX_PROXY_VERSION:-latest}
    container_name: nginx-proxy
    hostname: nginx-proxy
    environment:
      - TZ=UTC
      # nginx-proxy configuration
      - DEFAULT_HOST=${DEFAULT_HOST:-home}
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - TRUST_DOWNSTREAM_PROXY=true
      # HTTPS configuration for step-ca integration
      - HTTPS_METHOD=${HTTPS_METHOD:-redirect}
      - VIRTUAL_HOST=proxy.home
      - VIRTUAL_PORT=80
      # SSL configuration
      - SSL_POLICY=${SSL_POLICY:-Mozilla-Intermediate}
      - HSTS=off  # Disable HSTS for local development
    volumes:
      # Docker socket for service discovery
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # nginx configuration directory
      - nginx-proxy-config:/etc/nginx/conf.d
      # Step CA certificates for HTTPS
      - nginx-proxy-certs:/etc/nginx/certs:ro
      # Custom nginx templates (optional)
      - ./config/nginx-proxy.tmpl:/app/nginx.tmpl:ro
      # Logs
      - ./logs:/var/log/nginx
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    networks:
      - home-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # nginx-proxy-gen - Automatic nginx configuration generation
  nginx-proxy-gen:
    image: nginxproxy/docker-gen:${DOCKER_GEN_VERSION:-latest}
    container_name: nginx-proxy-gen
    environment:
      - TZ=UTC
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-proxy-config:/etc/nginx/conf.d
      - ./config/nginx-proxy.tmpl:/app/nginx.tmpl:ro
    command: -notify-sighup nginx-proxy -watch /app/nginx.tmpl /etc/nginx/conf.d/default.conf
    networks:
      - home-network
    restart: unless-stopped
    depends_on:
      - nginx-proxy

  # Certificate Request Helper - Gets certificates from step-ca for nginx-proxy
  cert-manager:
    image: certbot/certbot:${CERTBOT_VERSION:-latest}
    container_name: nginx-proxy-cert-manager
    environment:
      - TZ=UTC
      - STEP_CA_URL=${STEP_CA_URL:-https://step-ca:9000}
      - ACME_EMAIL=${ACME_EMAIL:-admin@homeserver.local}
    volumes:
      - step-ca-data:/step-ca:ro
      - nginx-proxy-certs:/etc/letsencrypt
      - ./scripts:/scripts:ro
    networks:
      - home-network
    restart: "no"  # Run manually or via cron
    depends_on:
      - nginx-proxy
    command: /scripts/request-certificates.sh

  # Certificate Renewal Service
  cert-renewer:
    image: certbot/certbot:${CERTBOT_VERSION:-latest}
    container_name: nginx-proxy-cert-renewer
    environment:
      - TZ=UTC
      - STEP_CA_URL=${STEP_CA_URL:-https://step-ca:9000}
    volumes:
      - step-ca-data:/step-ca:ro
      - nginx-proxy-certs:/etc/letsencrypt
      - ./scripts:/scripts:ro
    networks:
      - home-network
    restart: "no"  # Run via cron
    depends_on:
      - nginx-proxy
    command: /scripts/renew-certificates.sh

networks:
  home-network:
    external: true

volumes:
  nginx-proxy-config:
  nginx-proxy-certs:
  step-ca-data:
    external: true 