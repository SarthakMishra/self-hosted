---
# Docker Networks Role - Main Tasks
# Handles Docker overlay and bridge network creation and configuration

- name: Check if Docker Swarm is active
  ansible.builtin.command: docker info --format '{{ "{{" }}.Swarm.LocalNodeState{{ "}}" }}'
  register: swarm_check
  changed_when: false
  tags:
    - docker_networks
    - check

- name: Verify Swarm is active before creating overlay networks
  ansible.builtin.fail:
    msg: "Docker Swarm must be active to create overlay networks"
  when: 
    - swarm_check.stdout != "active"
    - docker_networks | selectattr('driver', 'equalto', 'overlay') | list | length > 0
  tags:
    - docker_networks
    - check

- name: Create Docker networks
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver }}"
    ipam_config:
      - subnet: "{{ item.subnet | default(omit) }}"
        gateway: "{{ item.gateway | default(omit) }}"
    driver_options:
      encrypted: "{{ 'true' if item.encrypted | default(false) else omit }}"
      com.docker.network.driver.mtu: "{{ item.mtu | default(omit) }}"
      com.docker.network.bridge.name: "{{ item.bridge_name | default(omit) }}"
    attachable: "{{ item.attachable | default(false) }}"
    internal: "{{ item.internal | default(false) }}"
    state: present
  loop: "{{ docker_networks }}"
  register: networks_created
  tags:
    - docker_networks
    - creation

- name: Verify network creation
  ansible.builtin.command: docker network ls --filter name={{ item.name }} --format "{{ '{{' }}.Name{{ '}}' }}"
  register: network_verification
  changed_when: false
  loop: "{{ docker_networks }}"
  tags:
    - docker_networks
    - verification

- name: Inspect created networks
  ansible.builtin.command: docker network inspect {{ item.name }}
  register: network_inspection
  changed_when: false
  failed_when: false
  loop: "{{ docker_networks }}"
  tags:
    - docker_networks
    - inspection

- name: Test basic connectivity on overlay networks
  ansible.builtin.command: >
    docker run --rm --network {{ item.name }} alpine ping -c 3 8.8.8.8
  register: network_connectivity_test
  changed_when: false
  failed_when: false
  loop: "{{ docker_networks | selectattr('driver', 'equalto', 'overlay') | selectattr('internal', 'undefined') | list }}"
  when: item.internal is not defined or not item.internal
  tags:
    - docker_networks
    - testing

- name: Display network configuration summary
  ansible.builtin.debug:
    msg:
      - "Docker networks configuration completed"
      - "Networks created: {{ docker_networks | map(attribute='name') | join(', ') }}"
      - "Overlay networks: {{ docker_networks | selectattr('driver', 'equalto', 'overlay') | map(attribute='name') | join(', ') }}"
      - "Bridge networks: {{ docker_networks | selectattr('driver', 'equalto', 'bridge') | map(attribute='name') | join(', ') }}"
      - "Encrypted networks: {{ docker_networks | selectattr('encrypted', 'defined') | selectattr('encrypted', 'equalto', true) | map(attribute='name') | join(', ') }}"
  tags:
    - docker_networks
    - summary

- name: Display network details
  ansible.builtin.debug:
    msg:
      - "Network: {{ item.name }}"
      - "  Driver: {{ item.driver }}"
      - "  Subnet: {{ item.subnet | default('Auto-assigned') }}"
      - "  Gateway: {{ item.gateway | default('Auto-assigned') }}"
      - "  Encrypted: {{ item.encrypted | default(false) }}"
      - "  Attachable: {{ item.attachable | default(false) }}"
      - "  Internal: {{ item.internal | default(false) }}"
      - "  MTU: {{ item.mtu | default('Default') }}"
  loop: "{{ docker_networks }}"
  tags:
    - docker_networks
    - details 