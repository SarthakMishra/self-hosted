services:
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: umami
    restart: unless-stopped
    
    # Environment configuration
    env_file:
      - .env
    
    environment:
      # Database configuration
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@umami-db:5432/${POSTGRES_DB}
      - DATABASE_TYPE=postgresql
      
      # Application secret for JWT tokens
      - APP_SECRET=${UMAMI_APP_SECRET}
      
      # Optional: Disable registration (set to 1 to disable)
      - DISABLE_REGISTRATION=${UMAMI_DISABLE_REGISTRATION:-0}
      
      # Optional: Analytics script name (default: script.js)
      - TRACKER_SCRIPT_NAME=${UMAMI_TRACKER_SCRIPT_NAME:-script.js}
      
      # Optional: Force SSL in production
      - FORCE_SSL=${UMAMI_FORCE_SSL:-1}
      
      # Optional: Base path if serving from subdirectory
      - BASE_PATH=${UMAMI_BASE_PATH:-}
      
      # Optional: Enable debug logging
      - DEBUG=${UMAMI_DEBUG:-0}
      
      # Optional: Log query execution (for debugging)
      - LOG_QUERY=${UMAMI_LOG_QUERY:-0}

    depends_on:
      umami-db:
        condition: service_healthy

    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # HTTPS configuration
      - "traefik.http.routers.umami-https.rule=Host(`${UMAMI_DOMAIN}`)"
      - "traefik.http.routers.umami-https.entrypoints=websecure"
      - "traefik.http.routers.umami-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.umami-https.service=umami"
      
      # Service configuration
      - "traefik.http.services.umami.loadbalancer.server.port=3000"
      
      # Security headers middleware
      - "traefik.http.middlewares.umami-headers.headers.sslredirect=true"
      - "traefik.http.middlewares.umami-headers.headers.stsSeconds=315360000"
      - "traefik.http.middlewares.umami-headers.headers.browserxssfilter=true"
      - "traefik.http.middlewares.umami-headers.headers.contenttypenosniff=true"
      - "traefik.http.middlewares.umami-headers.headers.forcestsheader=true"
      - "traefik.http.middlewares.umami-headers.headers.sslhost=${UMAMI_DOMAIN}"
      - "traefik.http.middlewares.umami-headers.headers.stsincludesubdomains=true"
      - "traefik.http.middlewares.umami-headers.headers.stspreload=true"
      - "traefik.http.middlewares.umami-headers.headers.referrerpolicy=strict-origin-when-cross-origin"
      
      # Apply middleware to HTTPS router
      - "traefik.http.routers.umami-https.middlewares=umami-headers"

    # Health check
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/heartbeat || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

    # Network configuration
    networks:
      - app-network
      - umami-internal

    # Security options
    security_opt:
      - no-new-privileges:true

  umami-db:
    image: postgres:15-alpine
    container_name: umami-db
    restart: unless-stopped
    
    # Environment configuration
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS:---encoding=UTF-8 --lc-collate=C --lc-ctype=C}
    
    volumes:
      # Persistent database storage
      - umami_db_data:/var/lib/postgresql/data
      
      # Optional: Custom PostgreSQL configuration
      # - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
      
      # Optional: Database initialization scripts
      # - ./init-scripts:/docker-entrypoint-initdb.d:ro

    # Health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

    # Network configuration (only internal network)
    networks:
      - umami-internal

    # Security options
    security_opt:
      - no-new-privileges:true

    # Labels for organization (not exposed to Traefik)
    labels:
      - "traefik.enable=false"

# Networks
networks:
  # External network for Traefik communication
  app-network:
    external: true
    
  # Internal network for database communication
  umami-internal:
    driver: bridge
    internal: true

# Persistent volumes
volumes:
  umami_db_data:
    driver: local 